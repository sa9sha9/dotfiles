{
 "kind": "discovery#restDescription",
 "discoveryVersion": "v1",
 "id": "drive:v2internal",
 "name": "drive",
 "version": "v2internal",
 "revision": "20171107",
 "title": "Drive API",
 "description": "Manages files in Drive including uploading, downloading, searching, detecting changes, and updating sharing permissions.",
 "ownerDomain": "google.com",
 "ownerName": "Google",
 "icons": {
  "x16": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_16.png",
  "x32": "https://ssl.gstatic.com/docs/doclist/images/drive_icon_32.png"
 },
 "protocol": "rest",
 "baseUrl": "https://www.googleapis.com/drive/v2internal/",
 "basePath": "/drive/v2internal/",
 "rootUrl": "https://www.googleapis.com/",
 "servicePath": "drive/v2internal/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "auth": {
  "oauth2": {
   "scopes": {
    "https://www.googleapis.com/auth/activity": {
     "description": "View the activity history of your Google apps"
    },
    "https://www.googleapis.com/auth/drive": {
     "description": "View and manage the files in your Google Drive"
    },
    "https://www.googleapis.com/auth/drive.activity": {
     "description": "View and add to the activity record of files in your Google Drive"
    },
    "https://www.googleapis.com/auth/drive.activity.readonly": {
     "description": "View the activity record of files in your Google Drive"
    },
    "https://www.googleapis.com/auth/drive.appdata": {
     "description": "View and manage its own configuration data in your Google Drive"
    },
    "https://www.googleapis.com/auth/drive.apps.readonly": {
     "description": "View your Google Drive apps"
    },
    "https://www.googleapis.com/auth/drive.file": {
     "description": "View and manage Google Drive files and folders that you have opened or created with this app"
    },
    "https://www.googleapis.com/auth/drive.metadata": {
     "description": "View and manage metadata of files in your Google Drive"
    },
    "https://www.googleapis.com/auth/drive.metadata.readonly": {
     "description": "View metadata for files in your Google Drive"
    },
    "https://www.googleapis.com/auth/drive.photos.readonly": {
     "description": "View the photos, videos and albums in your Google Photos"
    },
    "https://www.googleapis.com/auth/drive.readonly": {
     "description": "View the files in your Google Drive"
    },
    "https://www.googleapis.com/auth/drive.scripts": {
     "description": "Modify your Google Apps Script scripts' behavior"
    },
    "https://www.googleapis.com/auth/gmail.readonly": {
     "description": "View your email messages and settings"
    }
   }
  }
 },
 "schemas": {
  "About": {
   "id": "About",
   "type": "object",
   "description": "An item with user information and settings.",
   "properties": {
    "additionalRoleInfo": {
     "type": "array",
     "description": "Information about supported additional roles per file type. The most specific type takes precedence.",
     "items": {
      "type": "object",
      "properties": {
       "roleSets": {
        "type": "array",
        "description": "The supported additional roles per primary role.",
        "items": {
         "type": "object",
         "properties": {
          "additionalRoles": {
           "type": "array",
           "description": "The supported additional roles with the primary role.",
           "items": {
            "type": "string"
           }
          },
          "primaryRole": {
           "type": "string",
           "description": "A primary permission role."
          }
         }
        }
       },
       "type": {
        "type": "string",
        "description": "The content type that this additional role info applies to."
       }
      }
     }
    },
    "buildLabel": {
     "type": "string",
     "description": "The server's build label."
    },
    "domain": {
     "type": "string",
     "description": "The user's Apps domain, if applicable"
    },
    "domainSharingPolicy": {
     "type": "string",
     "description": "The domain sharing policy for the current user. Possible values are:  \n- allowed \n- allowedWithWarning \n- incomingOnly \n- disallowed"
    },
    "etag": {
     "type": "string",
     "description": "The ETag of the item."
    },
    "exportFormats": {
     "type": "array",
     "description": "The allowable export formats.",
     "items": {
      "type": "object",
      "properties": {
       "source": {
        "type": "string",
        "description": "The content type to convert from."
       },
       "targets": {
        "type": "array",
        "description": "The possible content types to convert to.",
        "items": {
         "type": "string"
        }
       }
      }
     }
    },
    "features": {
     "type": "array",
     "description": "List of additional features enabled on this account.",
     "items": {
      "type": "object",
      "properties": {
       "featureName": {
        "type": "string",
        "description": "The name of the feature."
       },
       "featureRate": {
        "type": "number",
        "description": "The request limit rate for this feature, in queries per second.",
        "format": "double"
       }
      }
     }
    },
    "folderColorPalette": {
     "type": "array",
     "description": "The palette of allowable folder colors as RGB hex strings.",
     "items": {
      "type": "string"
     }
    },
    "importFormats": {
     "type": "array",
     "description": "The allowable import formats.",
     "items": {
      "type": "object",
      "properties": {
       "source": {
        "type": "string",
        "description": "The imported file's content type to convert from."
       },
       "targets": {
        "type": "array",
        "description": "The possible content types to convert to.",
        "items": {
         "type": "string"
        }
       }
      }
     }
    },
    "isCurrentAppInstalled": {
     "type": "boolean",
     "description": "A boolean indicating whether the authenticated app is installed by the authenticated user."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#about.",
     "default": "drive#about"
    },
    "languageCode": {
     "type": "string",
     "description": "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/)."
    },
    "largestChangeId": {
     "type": "string",
     "description": "The largest change id.",
     "format": "int64"
    },
    "maxUploadSizes": {
     "type": "array",
     "description": "List of max upload sizes for each file type. The most specific type takes precedence.",
     "items": {
      "type": "object",
      "properties": {
       "size": {
        "type": "string",
        "description": "The max upload size for this type.",
        "format": "int64"
       },
       "type": {
        "type": "string",
        "description": "The file type."
       }
      }
     }
    },
    "name": {
     "type": "string",
     "description": "The name of the current user."
    },
    "permissionId": {
     "type": "string",
     "description": "The current user's ID as visible in the permissions collection."
    },
    "photosServiceEnabled": {
     "type": "boolean",
     "description": "Whether the Google Photos service is enabled for this account."
    },
    "quotaBytesByService": {
     "type": "array",
     "description": "The amount of storage quota used by different Google services.",
     "items": {
      "type": "object",
      "properties": {
       "bytesUsed": {
        "type": "string",
        "description": "The storage quota bytes used by the service.",
        "format": "int64"
       },
       "serviceName": {
        "type": "string",
        "description": "The service's name, e.g. DRIVE, GMAIL, or PHOTOS."
       }
      }
     }
    },
    "quotaBytesTotal": {
     "type": "string",
     "description": "The total number of quota bytes.",
     "format": "int64"
    },
    "quotaBytesUsed": {
     "type": "string",
     "description": "The number of quota bytes used by Google Drive.",
     "format": "int64"
    },
    "quotaBytesUsedAggregate": {
     "type": "string",
     "description": "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).",
     "format": "int64"
    },
    "quotaBytesUsedInTrash": {
     "type": "string",
     "description": "The number of quota bytes used by trashed items.",
     "format": "int64"
    },
    "quotaType": {
     "type": "string",
     "description": "The type of the user's storage quota. Possible values are:  \n- LIMITED \n- UNLIMITED"
    },
    "remainingChangeIds": {
     "type": "string",
     "description": "The number of remaining change ids, limited to no more than 2500.",
     "format": "int64"
    },
    "rootFolderId": {
     "type": "string",
     "description": "The id of the root folder."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this item."
    },
    "teamDriveThemes": {
     "type": "array",
     "description": "A list of themes that are supported for Team Drives.",
     "items": {
      "type": "object",
      "properties": {
       "backgroundImageLink": {
        "type": "string",
        "description": "A link to this Team Drive theme's background image."
       },
       "colorRgb": {
        "type": "string",
        "description": "The color of this Team Drive theme as an RGB hex string."
       },
       "id": {
        "type": "string",
        "description": "The ID of the theme."
       }
      }
     }
    },
    "user": {
     "$ref": "User",
     "description": "The authenticated user."
    }
   }
  },
  "ActionItem": {
   "id": "ActionItem",
   "type": "object",
   "description": "An action item (TODO) on the file for user. Action item currently can be an unanswered mention or an unresolved suggestions, but can be extended to other types like unseen edits, due tasks on files, etc. Any metadata associated with action item will also be included here. Details in http://go/docos-handling-priority-docs",
   "properties": {
    "id": {
     "type": "string",
     "description": "The ID of action item. E.g. comment ID of an unanswered mention in Kix document."
    },
    "type": {
     "type": "string",
     "description": "The type of action item. Type can be MENTION and SUGGESTION."
    }
   }
  },
  "AdminFile": {
   "id": "AdminFile",
   "type": "object",
   "description": "An admin's view of a file, used in admin requests.",
   "properties": {
    "id": {
     "type": "string",
     "description": "The ID of the file."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#adminFile.",
     "default": "drive#adminFile"
    },
    "parentId": {
     "type": "string"
    },
    "teamDriveId": {
     "type": "string",
     "description": "ID of the Team Drive the file resides in."
    },
    "title": {
     "type": "string",
     "description": "The title of this file."
    }
   }
  },
  "App": {
   "id": "App",
   "type": "object",
   "description": "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.",
   "properties": {
    "appDataQuotaBytesUsed": {
     "type": "string",
     "description": "The amount of Application Data quota used, in bytes. May be 0 while still having Application Data.",
     "format": "int64"
    },
    "authorized": {
     "type": "boolean",
     "description": "Whether the app is authorized to access data on the user's Drive."
    },
    "chromeExtensionIds": {
     "type": "array",
     "description": "The list of Chrome extension IDs associated with the app.",
     "items": {
      "type": "string"
     }
    },
    "createInFolderTemplate": {
     "type": "string",
     "description": "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in."
    },
    "createUrl": {
     "type": "string",
     "description": "The url to create a new file with this app."
    },
    "driveBranded": {
     "type": "boolean",
     "description": "Whether the app is an official Google Drive branded app."
    },
    "driveBrandedApp": {
     "type": "boolean",
     "description": "Deprecated (b/19710844)"
    },
    "driveSource": {
     "type": "boolean",
     "description": "Whether the app has created items in the user's Drive."
    },
    "hasAppData": {
     "type": "boolean",
     "description": "Whether the app has Application Data."
    },
    "hasDriveWideScope": {
     "type": "boolean",
     "description": "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive."
    },
    "hidden": {
     "type": "boolean",
     "description": "Whether the app is normally supressed from the list of apps."
    },
    "icons": {
     "type": "array",
     "description": "The various icons for the app.",
     "items": {
      "type": "object",
      "properties": {
       "category": {
        "type": "string",
        "description": "Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app"
       },
       "iconUrl": {
        "type": "string",
        "description": "URL for the icon."
       },
       "size": {
        "type": "integer",
        "description": "Size of the icon. Represented as the maximum of the width and height.",
        "format": "int32"
       }
      }
     }
    },
    "id": {
     "type": "string",
     "description": "The ID of the app."
    },
    "installed": {
     "type": "boolean",
     "description": "Whether the app is installed."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#app.",
     "default": "drive#app"
    },
    "longDescription": {
     "type": "string",
     "description": "A long description of the app."
    },
    "name": {
     "type": "string",
     "description": "The name of the app."
    },
    "objectType": {
     "type": "string",
     "description": "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead."
    },
    "openUrlTemplate": {
     "type": "string",
     "description": "The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids."
    },
    "origins": {
     "type": "array",
     "description": "The list of origins from which this app can be served.",
     "items": {
      "type": "string"
     }
    },
    "primaryFileExtensions": {
     "type": "array",
     "description": "The list of primary file extensions.",
     "items": {
      "type": "string"
     }
    },
    "primaryMimeTypes": {
     "type": "array",
     "description": "The list of primary mime types.",
     "items": {
      "type": "string"
     }
    },
    "productId": {
     "type": "string",
     "description": "The ID of the product listing for this app."
    },
    "productUrl": {
     "type": "string",
     "description": "A link to the product listing for this app."
    },
    "rankingInfo": {
     "type": "object",
     "description": "Information used to rank this app's quality versus other apps.",
     "properties": {
      "absoluteScore": {
       "type": "number",
       "format": "double"
      },
      "fileExtensionScores": {
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "score": {
          "type": "number",
          "description": "A numeric score for this app for opening this file type.",
          "format": "double"
         },
         "type": {
          "type": "string",
          "description": "A file's extension (e.g. \"jpg\")."
         }
        }
       }
      },
      "mimeTypeScores": {
       "type": "array",
       "items": {
        "type": "object",
        "properties": {
         "score": {
          "type": "number",
          "description": "A numeric score for this app for opening this file type.",
          "format": "double"
         },
         "type": {
          "type": "string",
          "description": "A file's MIME type."
         }
        }
       }
      }
     }
    },
    "removable": {
     "type": "boolean",
     "description": "Whether the app is removable (also known as uninstallable or deletable). Domain-installed apps and some first-party apps are \"force installed\" and therefore cannot be uninstalled by clients."
    },
    "requiresAuthorizationBeforeOpenWith": {
     "type": "boolean",
     "description": "Whether the app must be authorized before an \"Open with\" operation can be performed."
    },
    "secondaryFileExtensions": {
     "type": "array",
     "description": "The list of secondary file extensions.",
     "items": {
      "type": "string"
     }
    },
    "secondaryMimeTypes": {
     "type": "array",
     "description": "The list of secondary mime types.",
     "items": {
      "type": "string"
     }
    },
    "shortDescription": {
     "type": "string",
     "description": "A short description of the app."
    },
    "source": {
     "type": "boolean",
     "description": "Deprecated (b/19710844)"
    },
    "supportsCreate": {
     "type": "boolean",
     "description": "Whether this app supports creating new objects."
    },
    "supportsImport": {
     "type": "boolean",
     "description": "Whether this app supports importing Google Docs."
    },
    "supportsMobileBrowser": {
     "type": "boolean",
     "description": "Whether this app has indicated it works in mobile browsers."
    },
    "supportsMultiOpen": {
     "type": "boolean",
     "description": "Whether this app supports opening more than one file."
    },
    "supportsOfflineCreate": {
     "type": "boolean",
     "description": "Whether this app supports creating new files when offline."
    },
    "supportsTeamDrives": {
     "type": "boolean",
     "description": "Whether the app supports Team Drives."
    },
    "type": {
     "type": "string",
     "description": "The type of the app."
    },
    "useByDefault": {
     "type": "boolean",
     "description": "Whether the app is selected as the default handler for the types it supports."
    }
   }
  },
  "AppList": {
   "id": "AppList",
   "type": "object",
   "description": "A list of third-party applications which the user has installed or given access to Google Drive.",
   "properties": {
    "defaultAppIds": {
     "type": "array",
     "description": "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).",
     "items": {
      "type": "string"
     }
    },
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The list of apps.",
     "items": {
      "$ref": "App"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#appList.",
     "default": "drive#appList"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "AppliedCategoriesList": {
   "id": "AppliedCategoriesList",
   "type": "object",
   "description": "JSON template for a response list of Applied Categories.",
   "properties": {
    "appliedCategories": {
     "type": "object",
     "description": "The categories applied to this item, keyed by category name.",
     "additionalProperties": {
      "$ref": "AppliedCategory"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#appliedCategoriesList",
     "default": "drive#appliedCategoriesList"
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of applied categories. This field will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
    }
   }
  },
  "AppliedCategory": {
   "id": "AppliedCategory",
   "type": "object",
   "description": "Representation of an Applied Category.",
   "properties": {
    "attributeValues": {
     "type": "object",
     "description": "Values of the applied categories are enclosed in “attribute values” to avoid conflicts between attribute keys and properties of categoryAttributeValueTemplate.",
     "additionalProperties": {
      "$ref": "CategoryAttributeValue"
     }
    },
    "categoryName": {
     "type": "string",
     "description": "The name of the category."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#appliedCategory",
     "default": "drive#appliedCategory"
    }
   }
  },
  "AppliedCategoryDelta": {
   "id": "AppliedCategoryDelta",
   "type": "object",
   "description": "Representation of an Applied Category being modified.",
   "properties": {
    "categoryAttributeValueDeltas": {
     "type": "array",
     "description": "Contains the updates to attributes in the category",
     "items": {
      "$ref": "CategoryAttributeValueDelta"
     }
    },
    "categoryName": {
     "type": "string",
     "description": "The name of the Category."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#appliedCategoryDelta",
     "default": "drive#appliedCategoryDelta"
    }
   }
  },
  "ArchiveExtractionJob": {
   "id": "ArchiveExtractionJob",
   "type": "object",
   "description": "Represents metadata and status of an archive file extraction job.",
   "properties": {
    "destinationLocationId": {
     "type": "string",
     "description": "The ID of the folder to extract the contents of the archive into."
    },
    "etag": {
     "type": "string",
     "description": "The ETag of the file preview."
    },
    "id": {
     "type": "string",
     "description": "The ID for this archive file extraction job."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#archiveExtractionJob.",
     "default": "drive#archiveExtractionJob"
    },
    "sourceFileId": {
     "type": "string",
     "description": "The ID for the archive file that is extracted."
    },
    "status": {
     "type": "string",
     "description": "The current status of this file extraction job. Values are one of:  \n- INITIATED \n- PREPARED \n- SUCCEEDED \n- PENDING_ROLLBACK \n- FAILED"
    }
   }
  },
  "ArchiveResourcePreview": {
   "id": "ArchiveResourcePreview",
   "type": "object",
   "description": "A preview for a file resource within an archive.",
   "properties": {
    "children": {
     "type": "array",
     "description": "The list of child resource previews of this preview.",
     "items": {
      "$ref": "ArchiveResourcePreview"
     }
    },
    "errorType": {
     "type": "string",
     "description": "The type of error associated with this resource. Allowed values are:  \n- NONE \n- RESOURCE_UNREADABLE \n- RESOURCE_TOO_LARGE \n- USER_LACKS_QUOTA"
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#archiveResourcePreview.",
     "default": "drive#archiveResourcePreview"
    },
    "mimeType": {
     "type": "string",
     "description": "The mime type of the resource within the archive file."
    },
    "path": {
     "type": "string",
     "description": "The path of the resource within the archive file."
    }
   }
  },
  "Attachment": {
   "id": "Attachment",
   "type": "object",
   "description": "Representation of a gmail attachment metadata.",
   "properties": {
    "fileId": {
     "type": "string",
     "description": "The ID of the file created in Drive."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#attachment.",
     "default": "drive#attachment"
    },
    "messageId": {
     "type": "string",
     "description": "The message ID of the attachment. This is expected to be a hex string."
    },
    "partId": {
     "type": "string",
     "description": "The part ID of the attachment."
    }
   }
  },
  "Backup": {
   "id": "Backup",
   "type": "object",
   "description": "The metadata for a backup.",
   "properties": {
    "backupSource": {
     "type": "string",
     "description": "The source of the backup. Possible values are: whatsapp and carbon."
    },
    "backupSummary": {
     "type": "object",
     "description": "A summary of the contents of this backup. A map of types to the number and total size of the files of that type.",
     "additionalProperties": {
      "type": "object",
      "properties": {
       "count": {
        "type": "integer",
        "format": "int32"
       },
       "totalSize": {
        "type": "string",
        "format": "int64"
       }
      }
     }
    },
    "externalId": {
     "type": "string",
     "description": "The user-facing identifier for this backup. For WhatsApp backups, this is the phone number of the WhatsApp account."
    },
    "extractionState": {
     "type": "string",
     "description": "The current state of extraction for this backup. Extraction state can only be modified by calling startExtraction and stopExtraction. Transitions to ongoing and failed states are triggered by the completion or failure of processing in the backend.\nPossible values are:  \n- notStarted the user hasn't started extraction \n- started the user started extraction, but the initial extraction isn't complete \n- ongoing the initial extraction has completed and ongoing extraction is enabled \n- stopped the user paused the extraction from either the started or ongoing state \n- failed there was a persistent failure in either the initial or ongoing extraction"
    },
    "id": {
     "type": "string",
     "description": "The ID of the backup."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#backup.",
     "default": "drive#backup"
    },
    "lastBackupDate": {
     "type": "string",
     "description": "The time of this modification."
    },
    "targetFolderId": {
     "type": "string",
     "description": "The ID of the target folder for the extraction of this backup."
    }
   }
  },
  "BackupList": {
   "id": "BackupList",
   "type": "object",
   "description": "A list of backups for a user.",
   "properties": {
    "items": {
     "type": "array",
     "description": "The list of backups.",
     "items": {
      "$ref": "Backup"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#backupList.",
     "default": "drive#backupList"
    }
   }
  },
  "CategoryAttributeValue": {
   "id": "CategoryAttributeValue",
   "type": "object",
   "description": "Representation of a Category Attribute Value.",
   "properties": {
    "boolean": {
     "type": "boolean",
     "description": "Only present if valueType is boolean."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#categoryAttributeValue",
     "default": "drive#categoryAttributeValue "
    },
    "longText": {
     "type": "string",
     "description": "Only present if valueType is longText."
    },
    "name": {
     "type": "string",
     "description": "The identifier of this Category Attribute Value"
    },
    "shortText": {
     "type": "string",
     "description": "Only present if valueType is shortText."
    },
    "shortTextList": {
     "type": "array",
     "description": "Only present if valueType is shortTextList.",
     "items": {
      "type": "string"
     }
    },
    "valueType": {
     "type": "string",
     "description": "The attribute type. New values may be added in the future. The current valid values are:  \n- boolean \n- shortText \n- shortTextList \n- longText"
    }
   }
  },
  "CategoryAttributeValueDelta": {
   "id": "CategoryAttributeValueDelta",
   "type": "object",
   "description": "Representation of a Category Attribute Value being modified.",
   "properties": {
    "addShortTextValues": {
     "type": "array",
     "description": "A new value to add to a list of short text values if the attribute is a short text list attribute.",
     "items": {
      "type": "string"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#categoryAttributeValueDelta",
     "default": "drive#categoryAttributeValueDelta"
    },
    "name": {
     "type": "string",
     "description": "The identifier of the Attribute Value that should be modified."
    },
    "setBooleanValue": {
     "type": "boolean",
     "description": "The new value if the attribute is a boolean attribute."
    },
    "setLongTextValue": {
     "type": "string",
     "description": "The new value if the attribute is a long text attribute."
    },
    "setShortTextValue": {
     "type": "string",
     "description": "The new value if the attribute is a short text attribute."
    },
    "setShortTextValues": {
     "type": "array",
     "description": "Replaces the list of short text values with these new values if the attribute is a short text list attribute.",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "Change": {
   "id": "Change",
   "type": "object",
   "description": "Representation of a change to a file or Team Drive.",
   "properties": {
    "deleted": {
     "type": "boolean",
     "description": "Whether the file or Team Drive has been removed from this list of changes, for example by deletion or loss of access."
    },
    "file": {
     "$ref": "File",
     "description": "The updated state of the file. Present if the type is file and the file has not been removed from this list of changes."
    },
    "fileId": {
     "type": "string",
     "description": "The ID of the file associated with this change."
    },
    "fileVersion": {
     "type": "string",
     "description": "The version of the file associated with this change. See file.version.",
     "format": "int64"
    },
    "id": {
     "type": "string",
     "description": "The ID of the change.",
     "format": "int64"
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#change.",
     "default": "drive#change"
    },
    "modificationDate": {
     "type": "string",
     "description": "The time of this modification.",
     "format": "date-time"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this change."
    },
    "teamDrive": {
     "$ref": "TeamDrive",
     "description": "The updated state of the Team Drive. Present if the type is teamDrive, the user is still a member of the Team Drive, and the Team Drive has not been deleted."
    },
    "teamDriveId": {
     "type": "string",
     "description": "The ID of the Team Drive associated with this change."
    },
    "type": {
     "type": "string",
     "description": "The type of the change. Possible values are file and teamDrive."
    }
   }
  },
  "ChangeList": {
   "id": "ChangeList",
   "type": "object",
   "description": "A list of changes for a user.",
   "properties": {
    "efficiencyInfo": {
     "$ref": "Efficiency",
     "description": "Internal field efficiency info."
    },
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The list of changes. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
     "items": {
      "$ref": "Change"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#changeList.",
     "default": "drive#changeList"
    },
    "largestChangeId": {
     "type": "string",
     "description": "The current largest change ID.",
     "format": "int64"
    },
    "newStartPageToken": {
     "type": "string",
     "description": "The starting page token for future changes. This will be present only if the end of the current changes list has been reached."
    },
    "nextLink": {
     "type": "string",
     "description": "A link to the next page of changes."
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of changes. This will be absent if the end of the changes list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
    },
    "remainingChanges": {
     "type": "string",
     "description": "The number of remaining changes, limited to no more than 2500. This field cannot be requested with the items field.",
     "format": "int64"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "Channel": {
   "id": "Channel",
   "type": "object",
   "description": "An notification channel used to watch for resource changes.",
   "properties": {
    "address": {
     "type": "string",
     "description": "The address where notifications are delivered for this channel."
    },
    "expiration": {
     "type": "string",
     "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
     "format": "int64"
    },
    "id": {
     "type": "string",
     "description": "A UUID or similar unique string that identifies this channel."
    },
    "kind": {
     "type": "string",
     "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
     "default": "api#channel"
    },
    "params": {
     "type": "object",
     "description": "Additional parameters controlling delivery channel behavior. Optional.",
     "additionalProperties": {
      "type": "string",
      "description": "Declares a new parameter by name."
     }
    },
    "payload": {
     "type": "boolean",
     "description": "A Boolean value to indicate whether payload is wanted. Optional."
    },
    "resourceId": {
     "type": "string",
     "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
    },
    "resourceUri": {
     "type": "string",
     "description": "A version-specific identifier for the watched resource."
    },
    "token": {
     "type": "string",
     "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
    },
    "type": {
     "type": "string",
     "description": "The type of delivery mechanism used for this channel."
    }
   }
  },
  "CheckPermissionsRequest": {
   "id": "CheckPermissionsRequest",
   "type": "object",
   "properties": {
    "fileIds": {
     "type": "array",
     "description": "List of files by ID to check access to for the specified email addresses and role.",
     "items": {
      "type": "string"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#checkPermissionsRequest.",
     "default": "drive#checkPermissionsRequest"
    },
    "recipientEmailAddresses": {
     "type": "array",
     "description": "List of email addresses to ensure access for the specified items and role.",
     "items": {
      "type": "string"
     }
    },
    "role": {
     "type": "string"
    }
   }
  },
  "CheckPermissionsResponse": {
   "id": "CheckPermissionsResponse",
   "type": "object",
   "properties": {
    "fixOptions": {
     "type": "array",
     "description": "A list of proposed permission fixes for the specified recipients and files.",
     "items": {
      "type": "object",
      "properties": {
       "addCollaboratorsInfo": {
        "type": "object",
        "description": "If 'option_type' is set to 'ADD_COLLABORATORS', contains relevant information about adding collaborators.",
        "properties": {
         "outOfDomainWarningEmailAddresses": {
          "type": "array",
          "description": "List of recipient email addresses for which an out-of-domain-sharing warning must be shown, stating that these email addresses are not in at least one of the Google Apps organizations that the requested items belong to.",
          "items": {
           "type": "string"
          }
         }
        }
       },
       "allowedRoles": {
        "type": "array",
        "description": "Roles which may be offered to the user to select from.",
        "items": {
         "type": "string"
        }
       },
       "fixableFileIds": {
        "type": "array",
        "description": "The file ids this fix applies to. These are the items which will need their ACLs changed. It is not the list of items which will be readable by the recipient after the fix is applied, which may be larger.",
        "items": {
         "type": "string"
        }
       },
       "fixableRecipientEmailAddresses": {
        "type": "array",
        "description": "The recipients whose access to some/all of the items will change as a result of the fix.",
        "items": {
         "type": "string"
        }
       },
       "fixesEverything": {
        "type": "boolean",
        "description": "If true, then this option fixes access to all recipients for all files. Otherwise, the option only fixes access for either some recipients or some files."
       },
       "increaseDomainVisibilityInfo": {
        "type": "object",
        "description": "If 'optionType' is set to 'INCREASE_DOMAIN_VISIBILITY', contains relevant information about increasing domain visibility.",
        "properties": {
         "domainDisplayName": {
          "type": "string",
          "description": "The name to be displayed to the user for the domain to which this domain visibility fix applies. For example \"Google.com\" (in the case of \"google.com\". Note the difference in capitalization)."
         },
         "domainName": {
          "type": "string",
          "description": "The raw domain name for the domain to which this domain visibility fix applies. For example \"google.com\"."
         }
        }
       },
       "optionType": {
        "type": "string",
        "description": "The broad class of fix being proposed."
       }
      }
     }
    },
    "fixabilitySummaryState": {
     "type": "string",
     "description": "A summary of the overall fixability of the proposed recipients and files."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#checkPermissionsResponse.",
     "default": "drive#checkPermissionsResponse"
    }
   }
  },
  "ChildList": {
   "id": "ChildList",
   "type": "object",
   "description": "A list of children of a file.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The list of children. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
     "items": {
      "$ref": "ChildReference"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#childList.",
     "default": "drive#childList"
    },
    "nextLink": {
     "type": "string",
     "description": "A link to the next page of children."
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of children. This will be absent if the end of the children list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "ChildReference": {
   "id": "ChildReference",
   "type": "object",
   "description": "A reference to a folder's child.",
   "properties": {
    "childLink": {
     "type": "string",
     "description": "A link to the child."
    },
    "id": {
     "type": "string",
     "description": "The ID of the child.",
     "annotations": {
      "required": [
       "drive.children.insert"
      ]
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#childReference.",
     "default": "drive#childReference"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this reference."
    }
   }
  },
  "Comment": {
   "id": "Comment",
   "type": "object",
   "description": "A comment on a file in Google Drive.",
   "properties": {
    "anchor": {
     "type": "string",
     "description": "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties."
    },
    "author": {
     "$ref": "User",
     "description": "The user who wrote this comment."
    },
    "commentId": {
     "type": "string",
     "description": "The ID of the comment."
    },
    "content": {
     "type": "string",
     "description": "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.",
     "annotations": {
      "required": [
       "drive.comments.insert",
       "drive.comments.update"
      ]
     }
    },
    "context": {
     "type": "object",
     "description": "The context of the file which is being commented on.",
     "properties": {
      "type": {
       "type": "string",
       "description": "The MIME type of the context snippet."
      },
      "value": {
       "type": "string",
       "description": "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about."
      }
     }
    },
    "createdDate": {
     "type": "string",
     "description": "The date when this comment was first created.",
     "format": "date-time"
    },
    "deleted": {
     "type": "boolean",
     "description": "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed."
    },
    "fileId": {
     "type": "string",
     "description": "The file which this comment is addressing."
    },
    "fileTitle": {
     "type": "string",
     "description": "The title of the file which this comment is addressing."
    },
    "htmlContent": {
     "type": "string",
     "description": "HTML formatted content for this comment."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#comment.",
     "default": "drive#comment"
    },
    "modifiedDate": {
     "type": "string",
     "description": "The date when this comment or any of its replies were last modified.",
     "format": "date-time"
    },
    "replies": {
     "type": "array",
     "description": "Replies to this post.",
     "items": {
      "$ref": "CommentReply"
     }
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this comment."
    },
    "status": {
     "type": "string",
     "description": "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies."
    },
    "suggestionId": {
     "type": "string",
     "description": "Suggestion ID if the post is a suggestion, empty otherwise."
    }
   }
  },
  "CommentList": {
   "id": "CommentList",
   "type": "object",
   "description": "A list of comments on a file in Google Drive.",
   "properties": {
    "items": {
     "type": "array",
     "description": "The list of comments. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
     "items": {
      "$ref": "Comment"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#commentList.",
     "default": "drive#commentList"
    },
    "nextLink": {
     "type": "string",
     "description": "A link to the next page of comments."
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of comments. This will be absent if the end of the comments list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "CommentReply": {
   "id": "CommentReply",
   "type": "object",
   "description": "A comment on a file in Google Drive.",
   "properties": {
    "author": {
     "$ref": "User",
     "description": "The user who wrote this reply."
    },
    "content": {
     "type": "string",
     "description": "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).",
     "annotations": {
      "required": [
       "drive.replies.update"
      ]
     }
    },
    "createdDate": {
     "type": "string",
     "description": "The date when this reply was first created.",
     "format": "date-time"
    },
    "deleted": {
     "type": "boolean",
     "description": "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed."
    },
    "htmlContent": {
     "type": "string",
     "description": "HTML formatted content for this reply."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#commentReply.",
     "default": "drive#commentReply"
    },
    "modifiedDate": {
     "type": "string",
     "description": "The date when this reply was last modified.",
     "format": "date-time"
    },
    "replyId": {
     "type": "string",
     "description": "The ID of the reply."
    },
    "verb": {
     "type": "string",
     "description": "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment."
    }
   }
  },
  "CommentReplyList": {
   "id": "CommentReplyList",
   "type": "object",
   "description": "A list of replies to a comment on a file in Google Drive.",
   "properties": {
    "items": {
     "type": "array",
     "description": "The list of replies. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
     "items": {
      "$ref": "CommentReply"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#commentReplyList.",
     "default": "drive#commentReplyList"
    },
    "nextLink": {
     "type": "string",
     "description": "A link to the next page of replies."
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of replies. This will be absent if the end of the replies list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "Efficiency": {
   "id": "Efficiency",
   "type": "object",
   "description": "Information regarding what aspects of a request impacted efficiency.",
   "properties": {
    "inefficientDriveServiceFields": {
     "type": "array",
     "description": "The inefficient Drive Service fields requested.",
     "items": {
      "type": "string"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#efficiency.",
     "default": "drive#efficiency"
    },
    "queryStrategies": {
     "type": "array",
     "description": "The Drive Service query strategies used to answer the request.",
     "items": {
      "type": "string"
     }
    },
    "requestWasInefficient": {
     "type": "boolean"
    }
   }
  },
  "File": {
   "id": "File",
   "type": "object",
   "description": "The metadata for a file.",
   "properties": {
    "actionItems": {
     "type": "array",
     "description": "Action items for the current user on this file.",
     "items": {
      "$ref": "ActionItem"
     }
    },
    "alternateLink": {
     "type": "string",
     "description": "A link for opening the file in a relevant Google editor or viewer."
    },
    "alwaysShowInPhotos": {
     "type": "boolean",
     "description": "If set, this item will be sync'd to Photos with a flag indicating it should always be shown even if Drive objects are filtered out. This is intended for use only by the Drive/Photos unified uploader, and will be enforced with a whitelist."
    },
    "appDataContents": {
     "type": "boolean",
     "description": "Whether this file is in the appdata folder."
    },
    "appliedCategories": {
     "type": "object",
     "description": "Categories that have been applied to the file, keyed by the category name.",
     "additionalProperties": {
      "$ref": "AppliedCategory"
     }
    },
    "authorizedAppIds": {
     "type": "array",
     "description": "The apps that are authorized to this file. This is only populated when the drive.apps scope is used.",
     "items": {
      "type": "string"
     }
    },
    "blockingDetectors": {
     "type": "array",
     "description": "A list of DLP detector names for the file with blocking consequences.",
     "items": {
      "type": "string"
     }
    },
    "canComment": {
     "type": "boolean",
     "description": "Deprecated: use capabilities/canComment."
    },
    "capabilities": {
     "type": "object",
     "description": "Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take.",
     "properties": {
      "canAddChildren": {
       "type": "boolean",
       "description": "Whether the current user can add children to this folder. This is always false when the item is not a folder."
      },
      "canChangeRestrictedDownload": {
       "type": "boolean",
       "description": "Whether the current user can change the restricted download label of this file."
      },
      "canChangeWritersCanShare": {
       "type": "boolean",
       "description": "Whether the current user can change whether users with writer permission can share this file."
      },
      "canComment": {
       "type": "boolean",
       "description": "Whether the current user can comment on this file."
      },
      "canCopy": {
       "type": "boolean",
       "description": "Whether the current user can copy this file. For a Team Drive item, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder."
      },
      "canDelete": {
       "type": "boolean",
       "description": "Whether the current user can delete this file."
      },
      "canDownload": {
       "type": "boolean",
       "description": "Whether the current user can download this file."
      },
      "canEdit": {
       "type": "boolean",
       "description": "Whether the current user can edit this file."
      },
      "canListChildren": {
       "type": "boolean",
       "description": "Whether the current user can list the children of this folder. This is always false when the item is not a folder."
      },
      "canManageMembers": {
       "type": "boolean",
       "description": "Deprecated: use the canShare capability."
      },
      "canManageVisitors": {
       "type": "boolean",
       "description": "Deprecated: use the canShare capability."
      },
      "canModifyContentRestriction": {
       "type": "boolean",
       "description": "Whether the current user can modify restrictions on content of this file."
      },
      "canMoveItemIntoTeamDrive": {
       "type": "boolean",
       "description": "Whether the current user can move this item into a Team Drive. If the item is in a Team Drive, this field is equivalent to canMoveTeamDriveItem."
      },
      "canMoveTeamDriveItem": {
       "type": "boolean",
       "description": "Whether the current user can move this Team Drive item by changing its parent. Note that a request to change the parent for this item may still fail depending on the new parent that is being added. Only populated for Team Drive files."
      },
      "canPrint": {
       "type": "boolean",
       "description": "Whether the current user can print this file."
      },
      "canRead": {
       "type": "boolean",
       "description": "Whether the current user can read this file."
      },
      "canReadRevisions": {
       "type": "boolean",
       "description": "Whether the current user can read the revisions resource of this file. For a Team Drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read."
      },
      "canReadTeamDrive": {
       "type": "boolean",
       "description": "Whether the current user can read the Team Drive to which this file belongs. Only populated for Team Drive files."
      },
      "canRemoveChildren": {
       "type": "boolean",
       "description": "Whether the current user can remove children from this folder. This is always false when the item is not a folder."
      },
      "canRename": {
       "type": "boolean",
       "description": "Whether the current user can rename this file."
      },
      "canShare": {
       "type": "boolean",
       "description": "Whether the current user can modify the sharing settings for this file."
      },
      "canShareAsCommenter": {
       "type": "boolean",
       "description": "Whether the current user can share this file with the COMMENTER role. Only populated for Team Drive items."
      },
      "canShareAsOrganizer": {
       "type": "boolean",
       "description": "Whether the current user can share this file with the ORGANIZER role. Only populated for Team Drive items."
      },
      "canShareAsOwner": {
       "type": "boolean",
       "description": "Whether the current user can share this file with the OWNER role. Only populated for Team Drive items."
      },
      "canShareAsReader": {
       "type": "boolean",
       "description": "Whether the current user can share this file with the READER role. Only populated for Team Drive items."
      },
      "canShareAsWriter": {
       "type": "boolean",
       "description": "Whether the current user can share this file with the WRITER role. Only populated for Team Drive items."
      },
      "canSharePublishedViewAsReader": {
       "type": "boolean",
       "description": "Whether the current user can share the published view of this file with the READER role."
      },
      "canShareToAllUsers": {
       "type": "boolean",
       "description": "Whether the current user can share this file with all users, including those who are not signed in."
      },
      "canTrash": {
       "type": "boolean",
       "description": "Whether the current user can move this file to trash."
      },
      "canUntrash": {
       "type": "boolean",
       "description": "Whether the current user can restore this file from trash."
      }
     }
    },
    "changed": {
     "type": "boolean",
     "description": "Whether this file has been changed since this user last viewed it."
    },
    "commentsImported": {
     "type": "boolean",
     "description": "Whether the comments import has finished for the head revision."
    },
    "containsUnsubscribedChildren": {
     "type": "boolean",
     "description": "Whether this folder contains children that are unsubscribed."
    },
    "contentRestriction": {
     "type": "object",
     "description": "A restriction for accessing the content of the file. Only populated if such a restriction exists.",
     "properties": {
      "readOnly": {
       "type": "boolean",
       "description": "Whether the content of the file is read-only."
      },
      "reason": {
       "type": "string",
       "description": "Reason for why the content of the file is restricted. This is only mutable on requests that also set readOnly=true."
      }
     }
    },
    "copyable": {
     "type": "boolean",
     "description": "Deprecated: use capabilities/canCopy."
    },
    "createdDate": {
     "type": "string",
     "description": "The time at which this file was created, possibly as specified by the uploading client (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "creator": {
     "$ref": "User",
     "description": "User that created the item, if available."
    },
    "creatorAppId": {
     "type": "string",
     "description": "The ID of the application that was used to create this file."
    },
    "defaultOpenWithLink": {
     "type": "string",
     "description": "A link to open this file with the user's default app for this file. Only populated when the drive.apps[.readonly] scope is used."
    },
    "descendantOfRoot": {
     "type": "boolean",
     "description": "Whether the file is parented under root or any of its subfolders. Note that this field is not completely reliable as there can be propagation delays. Not populated for Team Drive files."
    },
    "description": {
     "type": "string",
     "description": "A short description of the file."
    },
    "detectors": {
     "type": "array",
     "description": "A list of DLP detector names for the file. These detectors have consequence, for example blocking sharing. DLP detectors without consequences will not appear in this list. Consider using blockingDetectors and warningDetectors instead if the type of consequence is important.",
     "items": {
      "type": "string"
     }
    },
    "downloadUrl": {
     "type": "string"
    },
    "driveSource": {
     "type": "object",
     "description": "The client that created an item.",
     "properties": {
      "clientServiceId": {
       "type": "string",
       "description": "The unique identifier for the client, limited to the values in DriveSource.ClientService"
      },
      "value": {
       "type": "string",
       "description": "An optional value carrying extra information about the client."
      }
     }
    },
    "editable": {
     "type": "boolean",
     "description": "Deprecated: use capabilities/canEdit."
    },
    "efficiencyInfo": {
     "$ref": "Efficiency",
     "description": "Internal field efficiency info."
    },
    "embedLink": {
     "type": "string",
     "description": "A link for embedding the file."
    },
    "embedded": {
     "type": "boolean",
     "description": "Whether this file is embedded within a package. Applications must be whitelisted to read this field."
    },
    "embeddingParent": {
     "type": "string",
     "description": "On write, the ID of the embedding parent file in which to embed this file. If the parent file belongs to a package the file is added to the same package, otherwise a new package is created with the ID of the parent file. On Read, the file ID of the embedding parent of this file within a package. Only present if the file is embedded in a package. Applications must be whitelisted to write or read this field."
    },
    "etag": {
     "type": "string",
     "description": "ETag of the file."
    },
    "explicitlyTrashed": {
     "type": "boolean",
     "description": "Whether this file has been explicitly trashed, as opposed to recursively trashed."
    },
    "exportLinks": {
     "type": "object",
     "description": "Links for exporting Google Docs to specific formats.",
     "additionalProperties": {
      "type": "string",
      "description": "A mapping from export format to URL"
     }
    },
    "fileExtension": {
     "type": "string",
     "description": "The final component of fullFileExtension with trailing text that does not appear to be part of the extension removed. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."
    },
    "fileSize": {
     "type": "string",
     "description": "The size of the file in bytes. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files.",
     "format": "int64"
    },
    "flaggedForAbuse": {
     "type": "boolean",
     "description": "Whether the file is flagged for abuse."
    },
    "folderColor": {
     "type": "string",
     "description": "Folder color (palette index) if the file is a folder. Not populated for Team Drive files.",
     "format": "int64"
    },
    "folderColorRgb": {
     "type": "string",
     "description": "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette. Not populated for Team Drive files."
    },
    "folderFeatures": {
     "type": "array",
     "description": "Additional attributes for a folder.",
     "items": {
      "type": "string"
     }
    },
    "folderProperties": {
     "type": "object",
     "properties": {
      "arbitrarySyncFolder": {
       "type": "boolean",
       "description": "This is a sync folder."
      },
      "externalMedia": {
       "type": "boolean",
       "description": "This is a external media folder."
      },
      "machineRoot": {
       "type": "boolean",
       "description": "This is a root directory of a machine sync."
      },
      "photosAndVideosOnly": {
       "type": "boolean",
       "description": "This is a photo and video only folder."
      },
      "psynchoFolder": {
       "type": "boolean",
       "description": "This folder is part of the user's Pyncho directory, but not the root."
      },
      "psynchoRoot": {
       "type": "boolean",
       "description": "This folder is the user's Pyncho root directory."
      }
     }
    },
    "fullFileExtension": {
     "type": "string",
     "description": "The full file extension; extracted from the title. May contain multiple concatenated extensions, such as \"tar.gz\". Removing an extension from the title does not clear this field; however, changing the extension on the title does update this field. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."
    },
    "gplusMedia": {
     "type": "boolean",
     "description": "Whether this file is a Google+ photo or video. Deleting such a file also deletes it from Google+."
    },
    "hasAppsScriptAddOn": {
     "type": "boolean",
     "description": "Whether the file has an Apps Script add-on attached."
    },
    "hasAugmentedPermissions": {
     "type": "boolean",
     "description": "Whether any users are granted file access directly on this file. This field is only populated for Team Drive files."
    },
    "hasChildFolders": {
     "type": "boolean",
     "description": "Whether the folder has one or more child folders."
    },
    "hasPermissionsForViews": {
     "type": "boolean",
     "description": "Whether the file has permissions for a view."
    },
    "hasThumbnail": {
     "type": "boolean",
     "description": "Whether this file has a thumbnail. This does not indicate whether the requesting app has access to the thumbnail. To check access, look for the presence of the thumbnailLink field."
    },
    "hasVisitorPermissions": {
     "type": "boolean",
     "description": "Whether there is a Team Drive visitor entry on this file for any user. This field is only populated for Team Drive files."
    },
    "headRevisionCreationDate": {
     "type": "string",
     "description": "The creation date of the file's head revision (formatted RFC 3339 timestamp). This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files.",
     "format": "date-time"
    },
    "headRevisionId": {
     "type": "string",
     "description": "The ID of the file's head revision. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."
    },
    "iconLink": {
     "type": "string",
     "description": "A link to the file's icon."
    },
    "id": {
     "type": "string",
     "description": "The ID of the file."
    },
    "imageMediaMetadata": {
     "type": "object",
     "description": "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.",
     "properties": {
      "aperture": {
       "type": "number",
       "description": "The aperture used to create the photo (f-number).",
       "format": "float"
      },
      "cameraMake": {
       "type": "string",
       "description": "The make of the camera used to create the photo."
      },
      "cameraModel": {
       "type": "string",
       "description": "The model of the camera used to create the photo."
      },
      "colorSpace": {
       "type": "string",
       "description": "The color space of the photo."
      },
      "date": {
       "type": "string",
       "description": "The date and time the photo was taken (EXIF format timestamp)."
      },
      "exposureBias": {
       "type": "number",
       "description": "The exposure bias of the photo (APEX value).",
       "format": "float"
      },
      "exposureMode": {
       "type": "string",
       "description": "The exposure mode used to create the photo."
      },
      "exposureTime": {
       "type": "number",
       "description": "The length of the exposure, in seconds.",
       "format": "float"
      },
      "flashUsed": {
       "type": "boolean",
       "description": "Whether a flash was used to create the photo."
      },
      "focalLength": {
       "type": "number",
       "description": "The focal length used to create the photo, in millimeters.",
       "format": "float"
      },
      "height": {
       "type": "integer",
       "description": "The height of the image in pixels.",
       "format": "int32"
      },
      "isoSpeed": {
       "type": "integer",
       "description": "The ISO speed used to create the photo.",
       "format": "int32"
      },
      "lens": {
       "type": "string",
       "description": "The lens used to create the photo."
      },
      "location": {
       "type": "object",
       "description": "Geographic location information stored in the image.",
       "properties": {
        "altitude": {
         "type": "number",
         "description": "The altitude stored in the image.",
         "format": "double"
        },
        "latitude": {
         "type": "number",
         "description": "The latitude stored in the image.",
         "format": "double"
        },
        "longitude": {
         "type": "number",
         "description": "The longitude stored in the image.",
         "format": "double"
        }
       }
      },
      "maxApertureValue": {
       "type": "number",
       "description": "The smallest f-number of the lens at the focal length used to create the photo (APEX value).",
       "format": "float"
      },
      "meteringMode": {
       "type": "string",
       "description": "The metering mode used to create the photo."
      },
      "rotation": {
       "type": "integer",
       "description": "The rotation in clockwise degrees from the image's original orientation.",
       "format": "int32"
      },
      "sensor": {
       "type": "string",
       "description": "The type of sensor used to create the photo."
      },
      "subjectDistance": {
       "type": "integer",
       "description": "The distance to the subject of the photo, in meters.",
       "format": "int32"
      },
      "whiteBalance": {
       "type": "string",
       "description": "The white balance mode used to create the photo."
      },
      "width": {
       "type": "integer",
       "description": "The width of the image in pixels.",
       "format": "int32"
      }
     }
    },
    "indexableText": {
     "type": "object",
     "description": "Indexable text attributes for the file (can only be written)",
     "properties": {
      "text": {
       "type": "string",
       "description": "The text to be indexed for this file."
      }
     }
    },
    "isAppAuthorized": {
     "type": "boolean",
     "description": "Whether the file was created or opened by the requesting app."
    },
    "isCompressed": {
     "type": "boolean",
     "description": "Whether lossy compression has been applied to the original file contents."
    },
    "kind": {
     "type": "string",
     "description": "The type of file. This is always drive#file.",
     "default": "drive#file"
    },
    "labels": {
     "type": "object",
     "description": "A group of labels for the file.",
     "properties": {
      "hidden": {
       "type": "boolean",
       "description": "Deprecated."
      },
      "modified": {
       "type": "boolean",
       "description": "Whether the file has been modified by this user."
      },
      "restricted": {
       "type": "boolean",
       "description": "Whether viewers and commenters are prevented from downloading, printing, and copying this file."
      },
      "starred": {
       "type": "boolean",
       "description": "Whether this file is starred by the user."
      },
      "trashed": {
       "type": "boolean",
       "description": "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files."
      },
      "viewed": {
       "type": "boolean",
       "description": "Whether this file has been viewed by this user."
      }
     }
    },
    "lastModifyingUser": {
     "$ref": "User",
     "description": "The last user to modify this file."
    },
    "lastModifyingUserName": {
     "type": "string",
     "description": "Name of the last user to modify this file."
    },
    "lastViewedByMeDate": {
     "type": "string",
     "description": "Last time this file was viewed by the user (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "localId": {
     "$ref": "FileLocalId",
     "description": "The local ID used when creating this file."
    },
    "markedViewedByMeDate": {
     "type": "string",
     "description": "Deprecated.",
     "format": "date-time"
    },
    "md5Checksum": {
     "type": "string",
     "description": "An MD5 checksum for the content of this file. This field is only populated for files with content stored in Drive; it is not populated for Google Docs or shortcut files."
    },
    "mimeType": {
     "type": "string",
     "description": "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type."
    },
    "modifiedByMeDate": {
     "type": "string",
     "description": "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.",
     "format": "date-time"
    },
    "modifiedDate": {
     "type": "string",
     "description": "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.",
     "format": "date-time"
    },
    "openWithLinks": {
     "type": "object",
     "description": "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps[.readonly] scope is used.",
     "additionalProperties": {
      "type": "string"
     }
    },
    "organizationDisplayName": {
     "type": "string",
     "description": "The displayable name of the organization to which this file belongs."
    },
    "originalFileSize": {
     "type": "string",
     "description": "The size in bytes of the original file contents before lossy compression was applied. Only populated if the file contents are not identical to the original file contents.",
     "format": "int64"
    },
    "originalFilename": {
     "type": "string",
     "description": "The original filename of the uploaded content if available, or else the original value of the title field. This is only available for files with binary content in Drive."
    },
    "originalMd5Checksum": {
     "type": "string",
     "description": "The MD5 checksum (as a hex-encoded string) of the original file contents before lossy compression was applied. Only populated if the file contents are not identical to the original file contents."
    },
    "ownedByMe": {
     "type": "boolean",
     "description": "Whether the file is owned by the current user. Not populated for Team Drive files."
    },
    "ownerNames": {
     "type": "array",
     "description": "Name(s) of the owner(s) of this file. Not populated for Team Drive files.",
     "items": {
      "type": "string"
     }
    },
    "owners": {
     "type": "array",
     "description": "The owner(s) of this file. Not populated for Team Drive files.",
     "items": {
      "$ref": "User"
     }
    },
    "packageFileSize": {
     "type": "string",
     "description": "The total size of the package in which this file is embedded. Only present when the file is embedded within a package. Applications must be whitelisted to read this field.",
     "format": "int64"
    },
    "packageId": {
     "type": "string",
     "description": "The package ID of the file, which is the same as the ID of the root file of this package. Only present if the file is embedded in a package. Applications must be whitelisted to read this field."
    },
    "pairedDocType": {
     "type": "string",
     "description": "The type of the ShadowDoc (go/shadowdocsdd) associated with the file. Possible values are:  \n- docs \n- sheets \n- slides"
    },
    "parents": {
     "type": "array",
     "description": "Collection of parent folders which contain this file.\nSetting this field will put the file in all of the provided folders. On insert, if no folders are provided, the file will be placed in the default root folder.",
     "items": {
      "$ref": "ParentReference"
     }
    },
    "passivelySubscribed": {
     "type": "boolean",
     "description": "Whether the current user is passively subscribed to this item."
    },
    "permissionIds": {
     "type": "array",
     "description": "List of permission IDs for users with access to this file.",
     "items": {
      "type": "string"
     }
    },
    "permissions": {
     "type": "array",
     "description": "The list of permissions for users with access to this file. Not populated for Team Drive files.",
     "items": {
      "$ref": "Permission"
     }
    },
    "permissionsSummary": {
     "type": "object",
     "description": "A summary of the permissions on this file. This is an output-only field.",
     "properties": {
      "entryCount": {
       "type": "integer",
       "description": "Total number of permission entries. This includes entries not in \"selectPermissions\".",
       "format": "int32"
      },
      "selectPermissions": {
       "type": "array",
       "description": "A selection of at most 10 entries from permissions on this file.",
       "items": {
        "$ref": "Permission"
       }
      },
      "visibility": {
       "type": "array",
       "description": "Visibility of the document (e.g. link shared to anyone, domain shared).",
       "items": {
        "type": "object",
        "properties": {
         "additionalRoles": {
          "type": "array",
          "description": "Additional roles for this user. Only commenter is currently possible.",
          "items": {
           "type": "string"
          }
         },
         "domain": {
          "type": "string",
          "description": "The domain of the entity the permission refers to. This is present when the visibility type is domain."
         },
         "domainDisplayName": {
          "type": "string",
          "description": "The domain name of the entity the permission refers to. This is present when the visibility type is domain."
         },
         "permissionId": {
          "type": "string",
          "description": "The ID of the permission that corresponds to this visibility."
         },
         "role": {
          "type": "string",
          "description": "The primary role for this user. While new values may be supported in the future, the following are currently possible:  \n- reader \n- writer"
         },
         "type": {
          "type": "string",
          "description": "The type of the visibility. Possible values are:  \n- domain \n- anyone"
         },
         "withLink": {
          "type": "boolean",
          "description": "Whether the link is required for the permission."
         }
        }
       }
      }
     }
    },
    "preview": {
     "type": "object",
     "description": "Resource to use for go/senna previews.",
     "properties": {
      "expiryDate": {
       "type": "string",
       "description": "The time at which preview link expires (formatted RFC 3339 timestamp).",
       "format": "date-time"
      },
      "link": {
       "type": "string",
       "description": "A short-lived Senna upload URL."
      }
     }
    },
    "primaryDomainName": {
     "type": "string",
     "description": "The DNS domain name of the primary domain of the organization to which this file belongs."
    },
    "primarySyncParentId": {
     "type": "string",
     "description": "The parent folder of the document that is also root or a subfolder of root. Note that this field is not completely reliable as there can be propagation delays. Not populated for Team Drive files."
    },
    "properties": {
     "type": "array",
     "description": "The list of properties.",
     "items": {
      "$ref": "Property"
     }
    },
    "publishingInfo": {
     "type": "object",
     "description": "Publish information related to a view.",
     "properties": {
      "published": {
       "type": "boolean",
       "description": "Whether the file has been published."
      },
      "publishedUrl": {
       "type": "string",
       "description": "The URL for the published view of the file."
      }
     }
    },
    "quotaBytesUsed": {
     "type": "string",
     "description": "The number of quota bytes used by this file.",
     "format": "int64"
    },
    "readable": {
     "type": "boolean",
     "description": "Deprecated: use capabilities/canRead."
    },
    "readersCanSeeComments": {
     "type": "boolean",
     "description": "Whether a reader can see comments on the file."
    },
    "recency": {
     "type": "string",
     "description": "An RFC 3339 timestamp which is used as the sorting field for the sort order of the same name.",
     "format": "date-time"
    },
    "recencyReason": {
     "type": "string",
     "description": "The reason for the current recency. Possible values are:  \n- createdByMe \n- modifiedByMe \n- modified \n- viewedByMe"
    },
    "recursiveFileCount": {
     "type": "string",
     "description": "Recursive number of sub-items for this folder. Zero for non-folders and empty folders.",
     "format": "int64"
    },
    "recursiveFileSize": {
     "type": "string",
     "description": "File size in bytes for this file and all sub-items.",
     "format": "int64"
    },
    "recursiveQuotaBytesUsed": {
     "type": "string",
     "description": "The number of bytes charged to the requesting user's quota for this file and all sub-items.",
     "format": "int64"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this file."
    },
    "serverCreatedDate": {
     "type": "string",
     "description": "The time at which this file was created from the perspective of the server (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "sha1Checksums": {
     "type": "array",
     "description": "The SHA1 checksums associated with this file. Cosmo doesn't store SHA1 for files, so this is only populated for files returned from a query using the sha1 query term. Photos and videos that are compressed will have both an original and a high quality checksum. Original quality photos and videos will only have one checksum.",
     "items": {
      "type": "string"
     }
    },
    "shareLink": {
     "type": "string",
     "description": "A link to the sharing UI for this file."
    },
    "shareable": {
     "type": "boolean",
     "description": "Deprecated: use capabilities/canShare."
    },
    "shared": {
     "type": "boolean",
     "description": "Whether the file has been shared. Not populated for Team Drive files."
    },
    "sharedWithMeDate": {
     "type": "string",
     "description": "Time at which this file was shared with the user (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "sharingUser": {
     "$ref": "User",
     "description": "User that shared the item with the current user, if available."
    },
    "source": {
     "type": "object",
     "description": "The client that created an item. Deprecated: use driveSource",
     "properties": {
      "client_service_id": {
       "type": "string",
       "description": "The unique identifier for the client, limited to the values in DriveSource.ClientService"
      },
      "value": {
       "type": "string",
       "description": "An optional value carrying extra information about the client."
      }
     }
    },
    "sourceAppId": {
     "type": "string",
     "description": "The ID of the application that was used to create this file. This may be a superset of creatorAppId, but for the Drive Sources work, we weren't interested in merging the two fields."
    },
    "sources": {
     "type": "any",
     "description": "Field not implemented, subject to change."
    },
    "spaces": {
     "type": "array",
     "description": "The list of spaces which contain the file. Supported values are 'drive', 'appDataFolder', 'photos' and 'androidBackup'.",
     "items": {
      "type": "string"
     }
    },
    "storagePolicyPending": {
     "type": "boolean",
     "description": "Compression is underway or being attempted and the final \"isCompressed\" state is TBD."
    },
    "subscribed": {
     "type": "boolean",
     "description": "Whether the current user is subscribed to this item."
    },
    "teamDriveId": {
     "type": "string",
     "description": "ID of the Team Drive the file resides in."
    },
    "templateData": {
     "type": "object",
     "description": "Template Data attached to a Google document. This data is present if document is a template.",
     "properties": {
      "category": {
       "type": "array",
       "description": "Categories for template. For domain templates, this is a list of strings each of which represent one category available for the domain.",
       "items": {
        "type": "string"
       }
      },
      "description": {
       "type": "string",
       "description": "Description for template."
      },
      "galleryState": {
       "type": "string",
       "description": "Gallery state for template which decides whether the template should be shown in the templates gallery or not. This can be one of: 1. AVAILABLE 2. UNAVAILABLE"
      }
     }
    },
    "thumbnail": {
     "type": "object",
     "description": "A thumbnail for the file. This will only be used if Drive cannot generate a standard thumbnail.",
     "properties": {
      "image": {
       "type": "string",
       "description": "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.",
       "format": "byte"
      },
      "mimeType": {
       "type": "string",
       "description": "The MIME type of the thumbnail."
      }
     }
    },
    "thumbnailLink": {
     "type": "string",
     "description": "A short-lived link to the file's thumbnail. Typically lasts on the order of hours. Only populated when the requesting app can access the file's content."
    },
    "thumbnailVersion": {
     "type": "string",
     "description": "The thumbnail version for use in thumbnail cache invalidation.",
     "format": "int64"
    },
    "title": {
     "type": "string",
     "description": "The title of this file. Note that for immutable items such as the top level folders of Team Drives, My Drive root folder, and Application Data folder the title is constant."
    },
    "trashedDate": {
     "type": "string",
     "description": "The time that the item was trashed (formatted RFC 3339 timestamp). Only populated for Team Drive files.",
     "format": "date-time"
    },
    "trashingUser": {
     "$ref": "User",
     "description": "If the file has been explicitly trashed, the user who trashed it. Only populated for Team Drive files."
    },
    "userPermission": {
     "$ref": "Permission",
     "description": "The permissions for the authenticated user on this file."
    },
    "version": {
     "type": "string",
     "description": "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.",
     "format": "int64"
    },
    "videoMediaMetadata": {
     "type": "object",
     "description": "Metadata about video media. This will only be present for video types.",
     "properties": {
      "durationMillis": {
       "type": "string",
       "description": "The duration of the video in milliseconds.",
       "format": "int64"
      },
      "height": {
       "type": "integer",
       "description": "The height of the video in pixels.",
       "format": "int32"
      },
      "width": {
       "type": "integer",
       "description": "The width of the video in pixels.",
       "format": "int32"
      }
     }
    },
    "viewersCanSeeComments": {
     "type": "boolean",
     "description": "Whether a viewer can see comments on the file."
    },
    "warningDetectors": {
     "type": "array",
     "description": "A list of DLP detector names for the file with warning consequences.",
     "items": {
      "type": "string"
     }
    },
    "webContentLink": {
     "type": "string",
     "description": "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials."
    },
    "webViewLink": {
     "type": "string",
     "description": "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting."
    },
    "writersCanShare": {
     "type": "boolean",
     "description": "Whether writers can share the document with other users. Not populated for Team Drive files."
    }
   }
  },
  "FileList": {
   "id": "FileList",
   "type": "object",
   "description": "A list of files.",
   "properties": {
    "efficiencyInfo": {
     "$ref": "Efficiency",
     "description": "Internal field efficiency info."
    },
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "incompleteSearch": {
     "type": "boolean",
     "description": "Whether the search process was incomplete. If true, then some search results may be missing, since all documents were not searched. This may occur when searching multiple Team Drives with the \"default,allTeamDrives\" corpora, but all corpora could not be searched. When this happens, it is suggested that clients narrow their query by choosing a different corpus such as \"default\" or \"teamDrive\"."
    },
    "items": {
     "type": "array",
     "description": "The list of files. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
     "items": {
      "$ref": "File"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#fileList.",
     "default": "drive#fileList"
    },
    "nextLink": {
     "type": "string",
     "description": "A link to the next page of files."
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of files. This will be absent if the end of the files list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    },
    "spellResponse": {
     "$ref": "SpellResponseTemplate",
     "description": "Spell response data. An example of this would be a correction in the spelling of a query that will likely return more results."
    },
    "suggestedNlpQueries": {
     "type": "array",
     "description": "List of suggested alternate \"q\" parameter values to use. These alternates are determined by applying natural language processing to the user's input to turn an unstructured query into a structured query.",
     "items": {
      "type": "string"
     }
    }
   }
  },
  "FileLocalId": {
   "id": "FileLocalId",
   "type": "object",
   "description": "A file's local ID.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "This is always drive#fileLocalId",
     "default": "drive#fileLocalId"
    },
    "space": {
     "type": "string",
     "description": "The type of the file this local ID represents."
    },
    "value": {
     "type": "string",
     "description": "A per-app-user identifier when combined with space and version."
    },
    "version": {
     "type": "string",
     "description": "The version of the conversion protocol used to generate the ID from the file ID."
    }
   }
  },
  "FilePreview": {
   "id": "FilePreview",
   "type": "object",
   "description": "A preview of the contents of a file.",
   "properties": {
    "archivePreview": {
     "type": "array",
     "description": "The list of contents of an archive file.",
     "items": {
      "$ref": "ArchiveResourcePreview"
     }
    },
    "etag": {
     "type": "string",
     "description": "The ETag of the file preview."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#filePreview.",
     "default": "drive#filePreview"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this file preview."
    }
   }
  },
  "FixPermissionsRequest": {
   "id": "FixPermissionsRequest",
   "type": "object",
   "properties": {
    "fileIds": {
     "type": "array",
     "description": "List of IDs of files whose permissions should be fixed with the specified fix option type.",
     "items": {
      "type": "string"
     }
    },
    "fixOptionType": {
     "type": "string",
     "description": "The type of fix to execute for the specified files."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#fixPermissionsRequest.",
     "default": "drive#fixPermissionsRequest"
    },
    "recipientEmailAddresses": {
     "type": "array",
     "description": "List of email address to add to the permissions of the specified files if the 'ADD_COLLABORATORS' fix option type is specified.",
     "items": {
      "type": "string"
     }
    },
    "role": {
     "type": "string",
     "description": "Role that should be applied to the files' collaborators (if 'ADD_COLLABORATORS' fix option type is specified) or to users accessing the files via a visible file link (for visibility-related fix option types)."
    }
   }
  },
  "GeneratedIds": {
   "id": "GeneratedIds",
   "type": "object",
   "description": "A list of generated IDs which can be provided in insert requests",
   "properties": {
    "ids": {
     "type": "array",
     "description": "The IDs generated for the requesting user in the specified space.",
     "items": {
      "type": "string"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#generatedIds",
     "default": "drive#generatedIds"
    },
    "space": {
     "type": "string",
     "description": "The type of file that can be created with these IDs."
    }
   }
  },
  "Impression": {
   "id": "Impression",
   "type": "object",
   "description": "A representation of an internal projector impression log.",
   "properties": {
    "impression": {
     "type": "string",
     "description": "The raw impression string to be logged."
    },
    "kind": {
     "type": "string",
     "description": "This is always viewer#impression",
     "default": "viewer#impression"
    }
   }
  },
  "NextDocPrediction": {
   "id": "NextDocPrediction",
   "type": "object",
   "description": "A single prediction.",
   "properties": {
    "explanationCode": {
     "type": "integer",
     "description": "Deprecated: Clients should not depend on this field being present. The explanation code of why this document was predicted. This field is more intended for logging and analysis, rather than for direct display to the user.",
     "default": "0",
     "format": "int32"
    },
    "explanationMessage": {
     "type": "string",
     "description": "The localized (using the provided locale) explanation message for why this document was predicted. The intention is that this message may be shown to the user."
    },
    "file": {
     "$ref": "File",
     "description": "The file resource for the document that was predicted."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#nextDocPrediction.",
     "default": "drive#nextDocPrediction"
    },
    "predictionSources": {
     "type": "array",
     "description": "Deprecated: Clients should not depend on this field being present. The sources of the prediction.",
     "items": {
      "type": "any"
     }
    },
    "score": {
     "type": "number",
     "description": "The score of this prediction for the target.",
     "format": "double"
    }
   }
  },
  "NextDocPredictionList": {
   "id": "NextDocPredictionList",
   "type": "object",
   "description": "A list of predictions for a user",
   "properties": {
    "experimentIds": {
     "type": "array",
     "description": "Deprecated: Clients should not depend on this field being present. The experiment IDs associated with the prediction.",
     "items": {
      "type": "any"
     }
    },
    "items": {
     "type": "array",
     "description": "The list of predicted items.",
     "items": {
      "$ref": "NextDocPrediction"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#nextDocPredictionList.",
     "default": "drive#nextDocPredictionList"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    },
    "tag": {
     "type": "string",
     "description": "A tag for the purpose of logging and analysis."
    }
   }
  },
  "Notification": {
   "id": "Notification",
   "type": "object",
   "description": "The metadata for a notification.",
   "properties": {
    "accessRequestData": {
     "type": "object",
     "description": "Additional content for Access Request notifications.",
     "properties": {
      "fileId": {
       "type": "string",
       "description": "ID of the item in Drive."
      },
      "granteeUser": {
       "$ref": "User2",
       "description": "User that will receive access. This may be different from the requester, who could be requesting access on behalf of the grantee."
      },
      "message": {
       "type": "string",
       "description": "Access request message."
      },
      "requestedRole": {
       "type": "string",
       "description": "The requested new level of access. Possible values are:  \n- reader \n- commenter \n- writer \n- owner \n- organizer"
      },
      "requesterUser": {
       "$ref": "User2",
       "description": "User who made the access request."
      },
      "shareUrl": {
       "type": "string",
       "description": "Link to open the item's sharing dialog in Drive."
      }
     }
    },
    "commentData": {
     "type": "object",
     "properties": {
      "commentCount": {
       "type": "string",
       "description": "The number of comments that are batched in this notification.",
       "format": "int64"
      },
      "commentDetails": {
       "type": "array",
       "description": "Details about each comment in the thread.",
       "items": {
        "type": "object",
        "properties": {
         "assigneeUser": {
          "$ref": "User2",
          "description": "The assignee of a todo. Only set if the commentType is \"todo\"."
         },
         "authorUser": {
          "$ref": "User2",
          "description": "User that created the comment."
         },
         "commentQuote": {
          "type": "string",
          "description": "The quoted text that the comment references. Only set if the comment quotes text."
         },
         "commentText": {
          "type": "string",
          "description": "The text of the comment."
         },
         "commentType": {
          "type": "string",
          "description": "The type of the comment. Possible values are:  \n- comment \n- suggestion \n- todo"
         },
         "isRecipientAssigenee": {
          "type": "boolean",
          "description": "Deprecated."
         },
         "isRecipientAssignee": {
          "type": "boolean",
          "description": "Whether the recipient is also the todo assignee."
         },
         "isRecipientMentioned": {
          "type": "boolean",
          "description": "Whether the recipient of the notification was @mentioned in the comment."
         }
        }
       }
      },
      "commentUrl": {
       "type": "string",
       "description": "Link to the comment in Drive."
      },
      "commenters": {
       "type": "array",
       "description": "The list of users that made comments in this notification.",
       "items": {
        "$ref": "User2"
       }
      },
      "fileId": {
       "type": "string",
       "description": "ID of the item in Drive that is being commented on."
      }
     }
    },
    "createdDate": {
     "type": "string",
     "description": "Create time for this notification (formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "description": {
     "type": "string",
     "description": "A localized notification description."
    },
    "id": {
     "type": "string",
     "description": "The ID of the notification."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#notification.",
     "default": "drive#notification"
    },
    "notificationType": {
     "type": "string",
     "description": "The type of this notification. Possible values are:  \n- share \n- accessRequest \n- storageAlert \n- comment"
    },
    "shareData": {
     "type": "object",
     "description": "Additional content for Share notifications.",
     "properties": {
      "alternate_link": {
       "type": "string",
       "description": "Deprecated."
      },
      "driveItems": {
       "type": "array",
       "description": "Drive IDs of all shared items.",
       "items": {
        "type": "object",
        "properties": {
         "alternateLink": {
          "type": "string",
          "description": "Link to open the shared item in Drive."
         },
         "fileId": {
          "type": "string",
          "description": "ID of the shared item in Drive."
         }
        }
       }
      },
      "fileId": {
       "type": "string",
       "description": "Deprecated."
      },
      "message": {
       "type": "string",
       "description": "User created share message."
      },
      "senderUser": {
       "$ref": "User2",
       "description": "User who shared the Drive items."
      }
     }
    },
    "storageData": {
     "type": "object",
     "properties": {
      "expirationDate": {
       "type": "string",
       "description": "Date when the storage quota is scheduled to expire (formatted RFC 3339 timestamp).",
       "format": "date-time"
      },
      "expiringQuotaBytes": {
       "type": "string",
       "description": "The size of the quota adjust that is scheduled to expire.",
       "format": "int64"
      },
      "quotaBytesTotal": {
       "type": "string",
       "description": "The total amount of quota the user currently has.",
       "format": "int64"
      },
      "quotaBytesUsed": {
       "type": "string",
       "description": "The total number of bytes the user currently uses.",
       "format": "int64"
      },
      "storageAlertType": {
       "type": "string",
       "description": "The type for the storage usage notification. Possible values are:  \n- normalUsage \n- highUsage \n- overQuota \n- overQuotaCritical"
      },
      "totalQuotaBytesAfterExpiration": {
       "type": "string",
       "description": "The total amount of quota that will remain after the expiration, assuming no other quota adjustments.",
       "format": "int64"
      }
     }
    },
    "title": {
     "type": "string",
     "description": "A localized notification title."
    }
   }
  },
  "ParentList": {
   "id": "ParentList",
   "type": "object",
   "description": "A list of a file's parents.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The list of parents.",
     "items": {
      "$ref": "ParentReference"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#parentList.",
     "default": "drive#parentList"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "ParentReference": {
   "id": "ParentReference",
   "type": "object",
   "description": "A reference to a file's parent.",
   "properties": {
    "id": {
     "type": "string",
     "description": "The ID of the parent.",
     "annotations": {
      "required": [
       "drive.parents.insert"
      ]
     }
    },
    "isRoot": {
     "type": "boolean",
     "description": "Whether or not the parent is the root folder."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#parentReference.",
     "default": "drive#parentReference"
    },
    "parentLink": {
     "type": "string",
     "description": "A link to the parent."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this reference."
    }
   }
  },
  "Permission": {
   "id": "Permission",
   "type": "object",
   "description": "A permission for a file.",
   "properties": {
    "additionalRoles": {
     "type": "array",
     "description": "Additional roles for this user. Only commenter is currently allowed, though more may be supported in the future.",
     "items": {
      "type": "string"
     }
    },
    "authKey": {
     "type": "string",
     "description": "Deprecated."
    },
    "capabilities": {
     "type": "object",
     "description": "Capabilities the current user has for this permission. Only populated for Team Drive items. Must be explicitly requested.",
     "properties": {
      "canAddAsCommenter": {
       "type": "boolean",
       "description": "Whether the current user can add the role of COMMENTER for this permission."
      },
      "canAddAsOrganizer": {
       "type": "boolean",
       "description": "Whether the current user can add the role of ORGANIZER for this permission."
      },
      "canAddAsOwner": {
       "type": "boolean",
       "description": "Whether the current user can add the role of OWNER for this permission."
      },
      "canAddAsReader": {
       "type": "boolean",
       "description": "Whether the current user can add the role of READER for this permission."
      },
      "canAddAsWriter": {
       "type": "boolean",
       "description": "Whether the current user can add the role of WRITER for this permission."
      },
      "canChangeToCommenter": {
       "type": "boolean",
       "description": "Whether the current user can change the Role for this permission to COMMENTER."
      },
      "canChangeToOrganizer": {
       "type": "boolean",
       "description": "Whether the current user can change the Role for this permission to ORGANIZER."
      },
      "canChangeToOwner": {
       "type": "boolean",
       "description": "Whether the current user can change the Role for this permission to OWNER."
      },
      "canChangeToReader": {
       "type": "boolean",
       "description": "Whether the current user can change the Role for this permission to READER."
      },
      "canChangeToReaderOnPublishedView": {
       "type": "boolean",
       "description": "Whether the current user can change this Permission to a role of READER on the published view."
      },
      "canChangeToWriter": {
       "type": "boolean",
       "description": "Whether the current user can change the Role for this permission to WRITER."
      },
      "canRemove": {
       "type": "boolean",
       "description": "Whether the current user can remove this permission."
      }
     }
    },
    "deleted": {
     "type": "boolean",
     "description": "Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions."
    },
    "domain": {
     "type": "string",
     "description": "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain."
    },
    "emailAddress": {
     "type": "string",
     "description": "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group."
    },
    "etag": {
     "type": "string",
     "description": "The ETag of the permission."
    },
    "expirationDate": {
     "type": "string",
     "description": "The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions:  \n- They can only be set on user and group permissions \n- The date must be in the future \n- The date cannot be more than a year in the future",
     "format": "date-time"
    },
    "id": {
     "type": "string",
     "description": "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#permission.",
     "default": "drive#permission"
    },
    "name": {
     "type": "string",
     "description": "The name for this permission."
    },
    "photoLink": {
     "type": "string",
     "description": "A link to the profile photo, if available."
    },
    "role": {
     "type": "string",
     "description": "The primary role for this user. While new values may be supported in the future, the following are currently allowed:  \n- organizer \n- owner \n- reader \n- writer",
     "annotations": {
      "required": [
       "drive.permissions.insert"
      ]
     }
    },
    "selectableRoles": {
     "type": "array",
     "description": "A list of roles that can be set as the effective role for this permission. Possible values are reader, commenter, writer, organizer, and none. Only populated for Team Drive items.",
     "items": {
      "type": "string"
     }
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this permission."
    },
    "teamDrivePermissionDetails": {
     "type": "array",
     "description": "Details of whether the permissions on this Team Drive item are inherited or directly on this item. This is an output-only field which is present only for Team Drive items.",
     "items": {
      "type": "object",
      "properties": {
       "additionalRoles": {
        "type": "array",
        "description": "Additional roles for this user. Only commenter is currently possible, though more may be supported in the future.",
        "items": {
         "type": "string"
        }
       },
       "inherited": {
        "type": "boolean",
        "description": "Whether this permission is inherited. This field is always populated. This is an output-only field."
       },
       "inheritedFrom": {
        "type": "string",
        "description": "The ID of the item from which this permission is inherited. This is an output-only field and is only populated for members of the Team Drive."
       },
       "role": {
        "type": "string",
        "description": "The primary role for this user. While new values may be added in the future, the following are currently possible:  \n- organizer \n- reader \n- writer"
       },
       "teamDrivePermissionType": {
        "type": "string",
        "description": "The Team Drive permission type for this user. While new values may be added in future, the following are currently possible:  \n- file\n- \n- member"
       }
      }
     }
    },
    "type": {
     "type": "string",
     "description": "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone",
     "annotations": {
      "required": [
       "drive.permissions.insert"
      ]
     }
    },
    "userId": {
     "type": "string",
     "description": "The user's ID. This is an output-only field which is present when the permission type is user."
    },
    "value": {
     "type": "string",
     "description": "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored."
    },
    "view": {
     "type": "string",
     "description": "Indicates the view for this permission. Only populated for permissions that belong to a view. published is the only supported value."
    },
    "withLink": {
     "type": "boolean",
     "description": "Whether the link is required for this permission."
    }
   }
  },
  "PermissionId": {
   "id": "PermissionId",
   "type": "object",
   "description": "An ID for a user or group as seen in Permission items.",
   "properties": {
    "id": {
     "type": "string",
     "description": "The permission ID."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#permissionId.",
     "default": "drive#permissionId"
    }
   }
  },
  "PermissionList": {
   "id": "PermissionList",
   "type": "object",
   "description": "A list of permissions associated with a file.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The list of permissions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
     "items": {
      "$ref": "Permission"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#permissionList.",
     "default": "drive#permissionList"
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of permissions. This field will be absent if the end of the permissions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "Prediction": {
   "id": "Prediction",
   "type": "object",
   "description": "A single prediction.",
   "properties": {
    "explanationCode": {
     "type": "integer",
     "description": "The explanation code of why this document was predicted. This field is more intended for logging and analysis, rather than for direct display to the user.",
     "format": "int32"
    },
    "explanationMessage": {
     "type": "string",
     "description": "The localized (using the provided locale) explanation message for why this document was predicted. The intention is that this message may be shown to the user."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#prediction.",
     "default": "drive#prediction"
    },
    "name": {
     "type": "string",
     "description": "The target ID for this prediction."
    },
    "predictionSources": {
     "type": "array",
     "description": "The sources of the prediction.",
     "items": {
      "type": "integer",
      "format": "int32"
     }
    },
    "score": {
     "type": "number",
     "description": "The score of this prediction for the target.",
     "format": "double"
    }
   }
  },
  "PredictionList": {
   "id": "PredictionList",
   "type": "object",
   "description": "A list of predictions for a user",
   "properties": {
    "buildLabel": {
     "type": "string",
     "description": "The build label of the server that served the response."
    },
    "experimentIds": {
     "type": "array",
     "description": "The experiment IDs associated with the prediction.",
     "items": {
      "type": "integer",
      "format": "int32"
     }
    },
    "highProbability": {
     "type": "boolean",
     "description": "Deprecated: Clients should not depend on the high-probability field."
    },
    "items": {
     "type": "array",
     "description": "The list of predicted items.",
     "items": {
      "$ref": "Prediction"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#predictionList.",
     "default": "drive#predictionList"
    },
    "rig": {
     "type": "string",
     "description": "The rig that served the response."
    },
    "score": {
     "type": "number",
     "description": "Deprecated: Clients should not depend on the top-level score.",
     "format": "double"
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    },
    "tag": {
     "type": "string",
     "description": "A tag for the purpose of logging and analysis."
    }
   }
  },
  "Property": {
   "id": "Property",
   "type": "object",
   "description": "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.",
   "properties": {
    "appId": {
     "type": "string",
     "description": "The app that owns the property."
    },
    "etag": {
     "type": "string",
     "description": "ETag of the property."
    },
    "key": {
     "type": "string",
     "description": "The key of this property."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#property.",
     "default": "drive#property"
    },
    "selfLink": {
     "type": "string",
     "description": "The link back to this property."
    },
    "value": {
     "type": "string",
     "description": "The value of this property."
    },
    "visibility": {
     "type": "string",
     "description": "The visibility of this property."
    }
   }
  },
  "PropertyList": {
   "id": "PropertyList",
   "type": "object",
   "description": "A collection of properties, key-value pairs that are either public or private to an application.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The list of properties.",
     "items": {
      "$ref": "Property"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#propertyList.",
     "default": "drive#propertyList"
    },
    "selfLink": {
     "type": "string",
     "description": "The link back to this list."
    }
   }
  },
  "RemainingCount": {
   "id": "RemainingCount",
   "type": "object",
   "description": "The number of remaining changes for a User or Team Drive.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "This is always drive#remainingCount.",
     "default": "drive#remainingCount"
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of results. This will be absent if all changes have been counted. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
    },
    "remainingCount": {
     "type": "string",
     "description": "The estimated number of remaining changes for the User or Team Drive. Limited to no more than the maxResults value defined in the request. If further changes remain, a nextPageToken will be available and the sum of the remainingCount values from all pages will reflect the total number of estimated changes available.",
     "format": "int64"
    }
   }
  },
  "Revision": {
   "id": "Revision",
   "type": "object",
   "description": "A revision of a file.",
   "properties": {
    "downloadUrl": {
     "type": "string",
     "description": "Short term download URL for the file. This will only be populated on files with content stored in Drive."
    },
    "etag": {
     "type": "string",
     "description": "The ETag of the revision."
    },
    "exportLinks": {
     "type": "object",
     "description": "Links for exporting Google Docs to specific formats.",
     "additionalProperties": {
      "type": "string",
      "description": "A mapping from export format to URL"
     }
    },
    "fileSize": {
     "type": "string",
     "description": "The size of the revision in bytes. This will only be populated on files with content stored in Drive.",
     "format": "int64"
    },
    "id": {
     "type": "string",
     "description": "The ID of the revision."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#revision.",
     "default": "drive#revision"
    },
    "lastModifyingUser": {
     "$ref": "User",
     "description": "The last user to modify this revision."
    },
    "lastModifyingUserName": {
     "type": "string",
     "description": "Name of the last user to modify this revision."
    },
    "md5Checksum": {
     "type": "string",
     "description": "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive."
    },
    "mimeType": {
     "type": "string",
     "description": "The MIME type of the revision."
    },
    "modifiedDate": {
     "type": "string",
     "description": "Last time this revision was modified (client-settable, formatted RFC 3339 timestamp).",
     "format": "date-time"
    },
    "originalFilename": {
     "type": "string",
     "description": "The original filename when this revision was created. This will only be populated on files with content stored in Drive."
    },
    "pinned": {
     "type": "boolean",
     "description": "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter."
    },
    "preview": {
     "type": "object",
     "description": "Resource to use for go/senna previews.",
     "properties": {
      "expiryDate": {
       "type": "string",
       "description": "The time at which preview link expires (formatted RFC 3339 timestamp).",
       "format": "date-time"
      },
      "link": {
       "type": "string",
       "description": "A short-lived Senna upload URL."
      }
     }
    },
    "publishAuto": {
     "type": "boolean",
     "description": "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs."
    },
    "published": {
     "type": "boolean",
     "description": "Whether this revision is published. This is only populated and can only be modified for Google Docs."
    },
    "publishedLink": {
     "type": "string",
     "description": "A link to the published revision."
    },
    "publishedOutsideDomain": {
     "type": "boolean",
     "description": "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this revision."
    },
    "serverModifiedDate": {
     "type": "string",
     "description": "Last time this revision was modified (server-maintained, formatted RFC 3339 timestamp).",
     "format": "date-time"
    }
   }
  },
  "RevisionList": {
   "id": "RevisionList",
   "type": "object",
   "description": "A list of revisions of a file.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The list of revisions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
     "items": {
      "$ref": "Revision"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#revisionList.",
     "default": "drive#revisionList"
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of revisions. This field will be absent if the end of the revisions list has been reached. If the token is rejected for any reason, it should be discarded and pagination should be restarted from the first page of results."
    },
    "selfLink": {
     "type": "string",
     "description": "A link back to this list."
    }
   }
  },
  "Setting": {
   "id": "Setting",
   "type": "object",
   "description": "User setting, a key-value tuple.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "ETag of the setting."
    },
    "key": {
     "type": "string",
     "description": "The key of this setting."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#setting.",
     "default": "drive#setting"
    },
    "namespace": {
     "type": "string",
     "description": "The namespace of this setting."
    },
    "selfLink": {
     "type": "string",
     "description": "The link back to this setting."
    },
    "value": {
     "type": "string",
     "description": "The value of this setting."
    }
   }
  },
  "SettingList": {
   "id": "SettingList",
   "type": "object",
   "description": "A list of user settings.",
   "properties": {
    "etag": {
     "type": "string",
     "description": "The ETag of the list."
    },
    "items": {
     "type": "array",
     "description": "The list of settings.",
     "items": {
      "$ref": "Setting"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#settingList.",
     "default": "drive#settingList"
    },
    "selfLink": {
     "type": "string",
     "description": "The link back to this list."
    }
   }
  },
  "ShareNotificationRequest": {
   "id": "ShareNotificationRequest",
   "type": "object",
   "description": "A request to send a sharing notification.",
   "properties": {
    "emailAddresses": {
     "type": "array",
     "description": "List of email addresses to which notifications should be sent.",
     "items": {
      "type": "string"
     },
     "annotations": {
      "required": [
       "drive.files.sendShareNotification"
      ]
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#shareNotificationRequest.",
     "default": "drive#shareNotificationRequest"
    },
    "message": {
     "type": "string",
     "description": "An optional message to be included in the notification."
    },
    "messageTemplate": {
     "type": "string",
     "description": "The message template to use when sending a notification. Supported templates include:  \n- invite \n- collaborators",
     "annotations": {
      "required": [
       "drive.files.sendShareNotification"
      ]
     }
    },
    "subject": {
     "type": "string",
     "description": "An optional subject."
    }
   }
  },
  "SpellResponseTemplate": {
   "id": "SpellResponseTemplate",
   "type": "object",
   "description": "Spell response information.",
   "properties": {
    "spellCorrections": {
     "type": "array",
     "description": "A list of suggested corrections. It may be possible for the original to match the correction in which case the status of all fragments will be set to CORRECT.",
     "items": {
      "type": "object",
      "properties": {
       "spellFragments": {
        "type": "array",
        "description": "A list of spell fragments for a correction. The full query is represented by the fragments. Each fragment will have a status of CORRECT, INCORRECT, or SUSPICIOUS.",
        "items": {
         "type": "object",
         "properties": {
          "correction": {
           "type": "string"
          },
          "original": {
           "type": "string"
          },
          "status": {
           "type": "string"
          }
         }
        }
       }
      }
     }
    }
   }
  },
  "StartPageToken": {
   "id": "StartPageToken",
   "type": "object",
   "properties": {
    "kind": {
     "type": "string",
     "description": "Identifies what kind of resource this is. Value: the fixed string \"drive#startPageToken\".",
     "default": "drive#startPageToken"
    },
    "startPageToken": {
     "type": "string",
     "description": "The starting page token for listing changes."
    }
   }
  },
  "SyncPhotoWithSha1Request": {
   "id": "SyncPhotoWithSha1Request",
   "type": "object",
   "description": "Sync information for syncing a Photo from Google Photos.",
   "properties": {
    "kind": {
     "type": "string",
     "description": "This is always drive#syncPhotoWithSha1Request.",
     "default": "drive#syncPhotoWithSha1Request"
    },
    "sha1Checksum": {
     "type": "string",
     "description": "Sha1 checksum of the Photo to sync."
    }
   }
  },
  "TeamDrive": {
   "id": "TeamDrive",
   "type": "object",
   "description": "Representation of a Team Drive.",
   "properties": {
    "backgroundImageFile": {
     "type": "object",
     "description": "An image file and cropping parameters from which a background image for this Team Drive is set. This is a write only field; it can only be set on drive.teamdrives.update requests that don't set themeId. When specified, all fields of the backgroundImageFile must be set.",
     "properties": {
      "id": {
       "type": "string",
       "description": "The ID of an image file in Drive to use for the background image."
      },
      "width": {
       "type": "number",
       "description": "The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.",
       "format": "float"
      },
      "xCoordinate": {
       "type": "number",
       "description": "The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.",
       "format": "float"
      },
      "yCoordinate": {
       "type": "number",
       "description": "The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.",
       "format": "float"
      }
     }
    },
    "backgroundImageGridViewLink": {
     "type": "string",
     "description": "A link to this Team Drive's background image for use in Tesla's grid view."
    },
    "backgroundImageId": {
     "type": "string",
     "description": "Deprecated"
    },
    "backgroundImageLink": {
     "type": "string",
     "description": "A short-lived link to this Team Drive's background image."
    },
    "backgroundImageListViewLink": {
     "type": "string",
     "description": "A link to this Team Drive's background image for use in Tesla's list view."
    },
    "capabilities": {
     "type": "object",
     "description": "Capabilities the current user has on this Team Drive.",
     "properties": {
      "canAddChildren": {
       "type": "boolean",
       "description": "Whether the current user can add children to folders in this Team Drive."
      },
      "canChangeCopyRequiresWriterPermissionRestriction": {
       "type": "boolean",
       "description": "Whether the current user can change the copyRequiresWriterPermission restriction for this Team Drive."
      },
      "canChangeDisallowDriveFileStreamRestriction": {
       "type": "boolean",
       "description": "Whether the current user can change the disallowDriveFileStream restriction for this Team Drive."
      },
      "canChangeDomainUsersOnlyRestriction": {
       "type": "boolean",
       "description": "Whether the current user can change the domainUsersOnly restriction for this Team Drive."
      },
      "canChangeTeamDriveBackground": {
       "type": "boolean",
       "description": "Whether the current user can change the background of this Team Drive."
      },
      "canChangeTeamMembersOnlyRestriction": {
       "type": "boolean",
       "description": "Whether the current user can change the teamMembersOnly restriction for this Team Drive."
      },
      "canComment": {
       "type": "boolean",
       "description": "Whether the current user can comment on files in this Team Drive."
      },
      "canCopy": {
       "type": "boolean",
       "description": "Whether the current user can copy files in this Team Drive."
      },
      "canDeleteTeamDrive": {
       "type": "boolean",
       "description": "Whether the current user can delete this Team Drive. Attempting to delete the Team Drive may still fail if there are untrashed items inside the Team Drive."
      },
      "canDownload": {
       "type": "boolean",
       "description": "Whether the current user can download files in this Team Drive."
      },
      "canEdit": {
       "type": "boolean",
       "description": "Whether the current user can edit files in this Team Drive"
      },
      "canListChildren": {
       "type": "boolean",
       "description": "Whether the current user can list the children of folders in this Team Drive."
      },
      "canManageMemberUpgrades": {
       "type": "boolean",
       "description": "Deprecated: use the canShare capability."
      },
      "canManageMembers": {
       "type": "boolean",
       "description": "Whether the current user can add members to this Team Drive or remove them or change their role."
      },
      "canManageVisitors": {
       "type": "boolean",
       "description": "Deprecated: use the canShare capability."
      },
      "canPrint": {
       "type": "boolean",
       "description": "Whether files in this Team Drive can be printed by the current user."
      },
      "canReadRevisions": {
       "type": "boolean",
       "description": "Whether the current user can read the revisions resource of files in this Team Drive."
      },
      "canRemoveChildren": {
       "type": "boolean",
       "description": "Whether the current user can remove children from folders in this Team Drive."
      },
      "canRename": {
       "type": "boolean",
       "description": "Whether the current user can rename files or folders in this Team Drive."
      },
      "canRenameTeamDrive": {
       "type": "boolean",
       "description": "Whether the current user can rename this Team Drive."
      },
      "canShare": {
       "type": "boolean",
       "description": "Whether the current user can share files or folders in this Team Drive."
      },
      "canShareOutsideDomain": {
       "type": "boolean",
       "description": "Whether the current user can share items inside this Team Drive to users outside the domain to which this Team Drive belongs."
      },
      "canShareToAllUsers": {
       "type": "boolean",
       "description": "Whether the current user can share files or folders in this Team Drive to all users, including those who are not signed in."
      }
     }
    },
    "colorRgb": {
     "type": "string",
     "description": "The color of this Team Drive as an RGB hex string. It can only be set on a drive.teamdrives.update request that does not set themeId."
    },
    "createdDate": {
     "type": "string",
     "description": "The time at which the Team Drive was created (RFC 3339 date-time).",
     "format": "date-time"
    },
    "domainAllowsSharingOutside": {
     "type": "boolean",
     "description": "Whether the domain to which this Team Drive belongs allows sharing files outside of the domain. The domainUsersOnly Team Drive restriction will be overridden if the domain does not allow sharing outside."
    },
    "id": {
     "type": "string",
     "description": "The ID of this Team Drive which is also the ID of the top level folder for this Team Drive."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#teamDrive",
     "default": "drive#teamDrive"
    },
    "name": {
     "type": "string",
     "description": "The name of this Team Drive."
    },
    "organizationDisplayName": {
     "type": "string",
     "description": "The display name of the organization to which this Team Drive belongs."
    },
    "permissionsSummary": {
     "type": "object",
     "description": "A summary of the permissions of this Team Drive as an output-only field.",
     "properties": {
      "entryCount": {
       "type": "integer",
       "description": "Total number of permission entries. This includes entries not in \"selectPermissions\".",
       "format": "int32"
      },
      "groupEntryCount": {
       "type": "integer",
       "description": "Total number of group type permission entries. This includes entries not in \"selectPermissions\".",
       "format": "int32"
      },
      "memberCount": {
       "type": "integer",
       "description": "Total number of members of this Team Drive, which contains the expanded group membership counts for any groups. If the Team Drive has several members a lower bound is returned instead.",
       "format": "int32"
      },
      "selectPermissions": {
       "type": "array",
       "description": "A selection of at most 10 entries from the Team Drive's permissions.",
       "items": {
        "$ref": "Permission"
       }
      },
      "userEntryCount": {
       "type": "integer",
       "description": "Total number of user type permission entries. This includes entries not in \"selectPermissions\".",
       "format": "int32"
      }
     }
    },
    "primaryDomainName": {
     "type": "string",
     "description": "The DNS domain name of the primary domain of the organization to which this Team Drive belongs."
    },
    "recursiveFileCount": {
     "type": "string",
     "description": "The number of files contained within this Team Drive, excluding the Team Drive's top level folder. NOTE: this value is stale, and is only intended to be used by Cello for backfilling purposes. Do not add to public API versions. More info: go/team-drive-stats-api",
     "format": "int64"
    },
    "recursiveFolderCount": {
     "type": "string",
     "description": "The number of folders contained within this Team Drive, excluding the Team Drive's top level folder. NOTE: this value is stale, and is only intended to be used by Cello for backfilling purposes. Do not add to public API versions. More info: go/team-drive-stats-api",
     "format": "int64"
    },
    "restrictions": {
     "type": "object",
     "description": "A set of restrictions that apply to this Team Drive or items inside this Team Drive.",
     "properties": {
      "adminManagedRestrictions": {
       "type": "boolean",
       "description": "Whether restrictions on this Team Drive can only be modified by an administrator\"."
      },
      "copyRequiresWriterPermission": {
       "type": "boolean",
       "description": "Whether files inside this Team Drive can only be copied, printed, or downloaded, by writers and organizer. When this restriction is set to true, it will override the restricted label by setting it to true for any file inside this Team Drive."
      },
      "disallowDriveFileStream": {
       "type": "boolean",
       "description": "Whether Drive File Stream is prevented from accessing items inside this Team Drive."
      },
      "domainUsersOnly": {
       "type": "boolean",
       "description": "Whether access to this Team Drive and items inside this Team Drive is restricted to users of the domain to which this Team Drive belongs. This field only reflects whether or not the restriction is set on this Team Drive. Even when this field has a value of false, if domainAllowsSharingOutside=false for the domain to which this Team Drive belongs, this Team Drive and items inside it cannot be shared outside of the domain."
      },
      "teamMembersOnly": {
       "type": "boolean",
       "description": "Whether access to items inside this Team Drive is restricted to members of this Team Drive."
      }
     }
    },
    "themeId": {
     "type": "string",
     "description": "The ID of the theme from which the background image and color will be set. The set of possible teamDriveThemes can be retrieved from a drive.about.get response. When not specified on a drive.teamdrives.insert request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set colorRgb or backgroundImageFile."
    },
    "trusted": {
     "type": "boolean",
     "description": "Whether this Team Drive belongs to a domain that is trusted by the requesting user's domain."
    }
   }
  },
  "TeamDriveList": {
   "id": "TeamDriveList",
   "type": "object",
   "description": "A list of Team Drives.",
   "properties": {
    "items": {
     "type": "array",
     "description": "The list of Team Drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.",
     "items": {
      "$ref": "TeamDrive"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#teamDriveList",
     "default": "drive#teamDriveList"
    },
    "nextPageToken": {
     "type": "string",
     "description": "The page token for the next page of Team Drives. This will be absent if the end of the Team Drives list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results."
    }
   }
  },
  "UpdateAppliedCategories": {
   "id": "UpdateAppliedCategories",
   "type": "object",
   "description": "Applied Category deltas to update.",
   "properties": {
    "appliedCategories": {
     "type": "array",
     "description": "Contains the applied categories to update",
     "items": {
      "$ref": "AppliedCategoryDelta"
     }
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#updateAppliedCategories",
     "default": "drive#updateAppliedCategories"
    }
   }
  },
  "User": {
   "id": "User",
   "type": "object",
   "description": "Information about a Drive user.",
   "properties": {
    "displayName": {
     "type": "string",
     "description": "A plain text displayable name for this user."
    },
    "domain": {
     "type": "string",
     "description": "The domain name of this user or group"
    },
    "domainSharingSettings": {
     "type": "object",
     "description": "The sharing settings for the domain of this user or group",
     "properties": {
      "maxAllUsersRole": {
       "type": "string",
       "description": "Maximum allowed role when sharing with all users."
      },
      "maxDomainRole": {
       "type": "string",
       "description": "Maximum allowed role when sharing with all users inside the domain."
      },
      "shareInPolicy": {
       "type": "string",
       "description": "Deprecated."
      },
      "shareOutPolicy": {
       "type": "string",
       "description": "Policy for sharing with a user outside the domain."
      }
     }
    },
    "emailAddress": {
     "type": "string",
     "description": "The email address of the user."
    },
    "id": {
     "type": "string",
     "description": "The user's ID."
    },
    "isAuthenticatedUser": {
     "type": "boolean",
     "description": "Whether this user is the same as the authenticated user for whom the request was made."
    },
    "kind": {
     "type": "string",
     "description": "This is always drive#user.",
     "default": "drive#user"
    },
    "permissionId": {
     "type": "string",
     "description": "The ID of the user's permission resources the permissions collection."
    },
    "picture": {
     "type": "object",
     "description": "The user's profile picture.",
     "properties": {
      "url": {
       "type": "string",
       "description": "A URL that points to a profile picture of this user."
      }
     }
    }
   }
  },
  "User2": {
   "id": "User2",
   "type": "object",
   "description": "Information about a Drive notification user.",
   "properties": {
    "displayName": {
     "type": "string",
     "description": "A plain text displayable name for this user."
    },
    "emailAddress": {
     "type": "string",
     "description": "The email address of the user."
    },
    "id": {
     "type": "string",
     "description": "The user's ID"
    },
    "kind": {
     "type": "string",
     "description": "This is always driveNotification#user.",
     "default": "driveNotification#user"
    }
   }
  }
 },
 "resources": {
  "about": {
   "methods": {
    "get": {
     "id": "drive.about.get",
     "path": "about",
     "httpMethod": "GET",
     "description": "Gets the information about the current user along with Drive API settings",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "includeSubscribed": {
       "type": "boolean",
       "description": "When calculating the number of remaining change IDs, whether to include shared files and public files the user has opened. When set to false, this counts only change IDs for owned files and any shared or public files that the user has explictly added to a folder in Drive.",
       "default": "true",
       "location": "query"
      },
      "maxChangeIdCount": {
       "type": "string",
       "description": "Maximum number of remaining change IDs to count",
       "default": "1",
       "format": "int64",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "startChangeId": {
       "type": "string",
       "description": "Change ID to start counting from when calculating number of remaining change IDs",
       "format": "int64",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "response": {
      "$ref": "About"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    }
   }
  },
  "admin": {
   "resources": {
    "files": {
     "methods": {
      "migrateToTeamDrive": {
       "id": "drive.admin.files.migrateToTeamDrive",
       "path": "admin/files/{fileId}/migrateToTeamDrive",
       "httpMethod": "POST",
       "description": "Migrates a file into a Team Drive. The file and Team Drive must belong to the same Domain, and the requester must be a migration administrator for that domain. The response contains the ID of the migrated file within the Team Drive. If the file is a folder, this ID will be different than the originating ID.",
       "parameters": {
        "errorRecovery": {
         "type": "boolean",
         "description": "Whether the request is done as a corrective measure after an earlier failed request.",
         "default": "false",
         "location": "query"
        },
        "fileId": {
         "type": "string",
         "description": "The ID of the file being migrated.",
         "required": true,
         "location": "path"
        },
        "mutationPrecondition": {
         "type": "boolean",
         "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
         "default": "false",
         "location": "query"
        },
        "openDrive": {
         "type": "boolean",
         "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
         "default": "false",
         "location": "query"
        },
        "reason": {
         "type": "string",
         "description": "The user action or internal event that triggered the request.",
         "location": "query"
        },
        "syncType": {
         "type": "integer",
         "description": "Whether the request is blocking a user action or not.",
         "default": "0",
         "format": "int32",
         "location": "query"
        }
       },
       "parameterOrder": [
        "fileId"
       ],
       "request": {
        "$ref": "AdminFile"
       },
       "response": {
        "$ref": "AdminFile"
       },
       "scopes": [
        "https://www.googleapis.com/auth/drive"
       ]
      }
     }
    }
   }
  },
  "apps": {
   "methods": {
    "delete": {
     "id": "drive.apps.delete",
     "path": "apps/{appId}",
     "httpMethod": "DELETE",
     "description": "Uninstall this app.",
     "parameters": {
      "appId": {
       "type": "string",
       "description": "The ID of the app to uninstall. Specify 'self' to uninstall the current app.",
       "required": true,
       "location": "path"
      },
      "deleteAppData": {
       "type": "boolean",
       "description": "Whether to delete the App Data folder.",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "appId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "get": {
     "id": "drive.apps.get",
     "path": "apps/{appId}",
     "httpMethod": "GET",
     "description": "Gets a specific app.",
     "parameters": {
      "appId": {
       "type": "string",
       "description": "The ID of the app.",
       "required": true,
       "location": "path"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "appId"
     ],
     "response": {
      "$ref": "App"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.apps.insert",
     "path": "apps",
     "httpMethod": "POST",
     "description": "Install this app.",
     "parameters": {
      "appId": {
       "type": "string",
       "description": "The ID of the app to install. If no app is given, the calling app is used.",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "response": {
      "$ref": "App"
     }
    },
    "list": {
     "id": "drive.apps.list",
     "path": "apps",
     "httpMethod": "GET",
     "description": "Lists a user's installed apps.",
     "parameters": {
      "appFilterExtensions": {
       "type": "string",
       "description": "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If appFilterMimeTypes are provided as well, the result is a union of the two resulting app lists.",
       "default": "",
       "location": "query"
      },
      "appFilterMimeTypes": {
       "type": "string",
       "description": "A comma-separated list of mimetypes for open with filtering. All apps within the given app query scope which can open any of the given mimetypes will be included in the response. If appFilterExtensions are provided as well, the result is a union of the two resulting app lists.",
       "default": "",
       "location": "query"
      },
      "appQueryScope": {
       "type": "string",
       "description": "The scope of this query.",
       "default": "USER_APP_GRANT",
       "enum": [
        "ALL_WEBSTORE",
        "AUTHORIZED_OR_INSTALLED",
        "USER_APP_GRANT"
       ],
       "enumDescriptions": [
        "Include all apps known in the webstore.",
        "A deprecated alias for USER_APP_GRANT.",
        "Query apps granted to the user. Use userAppGrantSource to select the sources."
       ],
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "includeHidden": {
       "type": "boolean",
       "description": "Whether to include apps that are normally suppressed in results, like first-party apps.",
       "default": "false",
       "location": "query"
      },
      "languageCode": {
       "type": "string",
       "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "noCache": {
       "type": "string",
       "description": "A comma-separated list of the sources for which to disallow caching. Currently, the only acceptable value is SOURCE.",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "userAppGrantSource": {
       "type": "string",
       "description": "A comma-separated list of the sources of user apps to query: AUTHORIZED, INSTALLED, or SOURCE.",
       "default": "AUTHORIZED,INSTALLED",
       "location": "query"
      }
     },
     "response": {
      "$ref": "AppList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive.apps.readonly"
     ]
    },
    "patch": {
     "id": "drive.apps.patch",
     "path": "apps/{appId}",
     "httpMethod": "PATCH",
     "description": "Update the properties of this app. This method supports patch semantics.",
     "parameters": {
      "appId": {
       "type": "string",
       "description": "The ID of the app to update.",
       "required": true,
       "location": "path"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "appId"
     ],
     "request": {
      "$ref": "App"
     },
     "response": {
      "$ref": "App"
     }
    },
    "update": {
     "id": "drive.apps.update",
     "path": "apps/{appId}",
     "httpMethod": "PUT",
     "description": "Update the properties of this app.",
     "parameters": {
      "appId": {
       "type": "string",
       "description": "The ID of the app to update.",
       "required": true,
       "location": "path"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "appId"
     ],
     "request": {
      "$ref": "App"
     },
     "response": {
      "$ref": "App"
     }
    }
   }
  },
  "attachments": {
   "methods": {
    "insert": {
     "id": "drive.attachments.insert",
     "path": "attachments",
     "httpMethod": "POST",
     "description": "Inserts a gmail attachment into drive.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "request": {
      "$ref": "Attachment"
     },
     "response": {
      "$ref": "Attachment"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/gmail.readonly"
     ]
    }
   }
  },
  "backups": {
   "methods": {
    "delete": {
     "id": "drive.backups.delete",
     "path": "backups/{backupId}",
     "httpMethod": "DELETE",
     "description": "Deletes a backup.",
     "parameters": {
      "backupId": {
       "type": "string",
       "description": "The ID of the backup to delete.",
       "required": true,
       "location": "path"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "backupId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata"
     ]
    },
    "get": {
     "id": "drive.backups.get",
     "path": "backups/{backupId}",
     "httpMethod": "GET",
     "description": "Gets a backup's metadata by ID.",
     "parameters": {
      "backupId": {
       "type": "string",
       "description": "The ID of the backup.",
       "required": true,
       "location": "path"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "backupId"
     ],
     "response": {
      "$ref": "Backup"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata"
     ]
    },
    "list": {
     "id": "drive.backups.list",
     "path": "backups",
     "httpMethod": "GET",
     "description": "Lists backups for a user.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "response": {
      "$ref": "BackupList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata"
     ]
    },
    "patch": {
     "id": "drive.backups.patch",
     "path": "backups/{backupId}",
     "httpMethod": "PATCH",
     "description": "Updates a backup's metadata.",
     "parameters": {
      "backupId": {
       "type": "string",
       "description": "The ID of the backup to update.",
       "required": true,
       "location": "path"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "backupId"
     ],
     "request": {
      "$ref": "Backup"
     },
     "response": {
      "$ref": "Backup"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata"
     ]
    },
    "startExtraction": {
     "id": "drive.backups.startExtraction",
     "path": "backups/{backupId}/startExtraction",
     "httpMethod": "POST",
     "description": "Starts extracting a backup.",
     "parameters": {
      "authToken": {
       "type": "string",
       "description": "A signed token that includes the user ID and a timestamp. Used to verify that a web user completed the reauth flow.",
       "location": "query"
      },
      "backupId": {
       "type": "string",
       "description": "The ID of the backup to extract.",
       "required": true,
       "location": "path"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "targetFolderId": {
       "type": "string",
       "description": "The ID of the folder where the files in the backup will be extracted.",
       "required": true,
       "location": "query"
      }
     },
     "parameterOrder": [
      "backupId",
      "targetFolderId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata"
     ]
    },
    "stopExtraction": {
     "id": "drive.backups.stopExtraction",
     "path": "backups/{backupId}/stopExtraction",
     "httpMethod": "POST",
     "description": "Stops extraction of a backup.",
     "parameters": {
      "backupId": {
       "type": "string",
       "description": "The ID of the backup.",
       "required": true,
       "location": "path"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "backupId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata"
     ]
    }
   }
  },
  "changes": {
   "methods": {
    "get": {
     "id": "drive.changes.get",
     "path": "changes/{changeId}",
     "httpMethod": "GET",
     "description": "Gets a specific change.",
     "parameters": {
      "allProperties": {
       "type": "boolean",
       "description": "Whether to retrieve all properties, not just those visible to the app.",
       "default": "false",
       "location": "query"
      },
      "changeId": {
       "type": "string",
       "description": "The ID of the change.",
       "required": true,
       "location": "path"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "teamDriveId": {
       "type": "string",
       "description": "The Team Drive from which the change will be returned.",
       "location": "query"
      }
     },
     "parameterOrder": [
      "changeId"
     ],
     "response": {
      "$ref": "Change"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "getRemainingCount": {
     "id": "drive.changes.getRemainingCount",
     "path": "changes/getRemainingCount",
     "httpMethod": "GET",
     "description": "Returns the estimated number of change entries that a client could expect by performing a similar changes.list request.",
     "parameters": {
      "filters": {
       "type": "string",
       "description": "A comma-separated list of filters. Supported values are 'DRIVE_SYNC', 'DRIVE_DATASERVICE', and 'MY_MAPS'.",
       "location": "query"
      },
      "includeEmbeddedItems": {
       "type": "boolean",
       "description": "Whether changes to package embedded items should be counted in results.",
       "default": "false",
       "location": "query"
      },
      "includeSubscribed": {
       "type": "boolean",
       "description": "Whether to count shared files and public files the user has opened. When set to false, the count will include owned files plus any shared or public files the user has explictly added to a folder in Drive.",
       "default": "true",
       "location": "query"
      },
      "includeTeamDriveItems": {
       "type": "boolean",
       "description": "Whether Team Drive files or changes should be counted in the results.",
       "default": "false",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of changes to count per page.",
       "default": "5000",
       "format": "int32",
       "minimum": "1",
       "maximum": "5000",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The token for continuing a previous count request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.",
       "required": true,
       "location": "query"
      },
      "spaces": {
       "type": "string",
       "description": "A comma-separated list of spaces to query. Supported values are 'drive', 'appContent', 'appDataFolder', 'photos' and 'androidBackup'.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "teamDriveId": {
       "type": "string",
       "description": "The Team Drive from which changes will be counted. If specified the change IDs will be reflective of the Team Drive; use the combined Team Drive ID and change ID as an identifier.",
       "location": "query"
      }
     },
     "parameterOrder": [
      "pageToken"
     ],
     "response": {
      "$ref": "RemainingCount"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "getStartPageToken": {
     "id": "drive.changes.getStartPageToken",
     "path": "changes/startPageToken",
     "httpMethod": "GET",
     "description": "Gets the starting pageToken for listing future changes.",
     "parameters": {
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "teamDriveId": {
       "type": "string",
       "description": "The ID of the Team Drive for which the starting pageToken for listing future changes from that Team Drive will be returned.",
       "location": "query"
      }
     },
     "response": {
      "$ref": "StartPageToken"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "list": {
     "id": "drive.changes.list",
     "path": "changes",
     "httpMethod": "GET",
     "description": "Lists the changes for a user or Team Drive.",
     "parameters": {
      "allProperties": {
       "type": "boolean",
       "description": "Whether to retrieve all properties, not just those visible to the app.",
       "default": "false",
       "location": "query"
      },
      "appDataFilter": {
       "type": "string",
       "description": "Deprecated: use 'spaces' instead. Specifies whether to return App Data, non-App Data, or both in query results.",
       "default": "ALL_FILES",
       "enum": [
        "ALL_FILES",
        "NO_APP_DATA",
        "ONLY_APP_DATA"
       ],
       "enumDescriptions": [
        "Specifies that the query should return App Data and non-App Data files.",
        "Specifies that the query should not return App Data files.",
        "Specifies that the query should only return App Data files."
       ],
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileScopeAppIds": {
       "type": "string",
       "description": "A comma separated list of app IDs. If set, the list will also include files inside the app data folder that could be opened with any of the given apps with drive.appdata scope. Requires the ALL_APPDATA scope.",
       "location": "query"
      },
      "filters": {
       "type": "string",
       "description": "A comma-separated list of filters. Supported values are 'DRIVE_SYNC', 'DRIVE_DATASERVICE', and 'MY_MAPS'.",
       "location": "query"
      },
      "includeCorpusRemovals": {
       "type": "boolean",
       "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.",
       "default": "false",
       "location": "query"
      },
      "includeDeleted": {
       "type": "boolean",
       "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.",
       "default": "true",
       "location": "query"
      },
      "includeEmbeddedItems": {
       "type": "boolean",
       "description": "Whether changes to package embedded items should be included in results.",
       "default": "false",
       "location": "query"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "includeSubscribed": {
       "type": "boolean",
       "description": "Whether to include shared files and public files the user has opened. When set to false, the list will include owned files plus any shared or public files the user has explictly added to a folder in Drive.",
       "default": "true",
       "location": "query"
      },
      "includeTeamDriveItems": {
       "type": "boolean",
       "description": "Whether Team Drive files or changes should be included in results.",
       "default": "false",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of changes to return.",
       "default": "100",
       "format": "int32",
       "minimum": "1",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "rejectInefficientRequests": {
       "type": "boolean",
       "description": "Whether the request should be rejected if it would generate an inefficient query.",
       "location": "query"
      },
      "returnEfficiencyInfo": {
       "type": "boolean",
       "description": "Whether the request should return efficiency info.",
       "location": "query"
      },
      "sources": {
       "type": "string",
       "description": "Deprecated: use 'spaces' instead. A comma-separated list of sources to query. Supported values are 'GOOGLE_PHOTOS' and 'ANDROID_BACKUP'.",
       "location": "query"
      },
      "spaces": {
       "type": "string",
       "description": "A comma-separated list of spaces to query. Supported values are 'drive', 'appContent', 'appDataFolder', 'photos' and 'androidBackup'.",
       "location": "query"
      },
      "startChangeId": {
       "type": "string",
       "description": "Change ID to start listing changes from.",
       "format": "int64",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "teamDriveId": {
       "type": "string",
       "description": "The Team Drive from which changes will be returned. If specified the change IDs will be reflective of the Team Drive; use the combined Team Drive ID and change ID as an identifier.",
       "location": "query"
      }
     },
     "response": {
      "$ref": "ChangeList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ],
     "supportsSubscription": true
    },
    "watch": {
     "id": "drive.changes.watch",
     "path": "changes/watch",
     "httpMethod": "POST",
     "description": "Subscribe to changes for a user.",
     "parameters": {
      "allProperties": {
       "type": "boolean",
       "description": "Whether to retrieve all properties, not just those visible to the app.",
       "default": "false",
       "location": "query"
      },
      "appDataFilter": {
       "type": "string",
       "description": "Deprecated: use 'spaces' instead. Specifies whether to return App Data, non-App Data, or both in query results.",
       "default": "ALL_FILES",
       "enum": [
        "ALL_FILES",
        "NO_APP_DATA",
        "ONLY_APP_DATA"
       ],
       "enumDescriptions": [
        "Specifies that the query should return App Data and non-App Data files.",
        "Specifies that the query should not return App Data files.",
        "Specifies that the query should only return App Data files."
       ],
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileScopeAppIds": {
       "type": "string",
       "description": "A comma separated list of app IDs. If set, the list will also include files inside the app data folder that could be opened with any of the given apps with drive.appdata scope. Requires the ALL_APPDATA scope.",
       "location": "query"
      },
      "filters": {
       "type": "string",
       "description": "A comma-separated list of filters. Supported values are 'DRIVE_SYNC', 'DRIVE_DATASERVICE', and 'MY_MAPS'.",
       "location": "query"
      },
      "includeCorpusRemovals": {
       "type": "boolean",
       "description": "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.",
       "default": "false",
       "location": "query"
      },
      "includeDeleted": {
       "type": "boolean",
       "description": "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.",
       "default": "true",
       "location": "query"
      },
      "includeEmbeddedItems": {
       "type": "boolean",
       "description": "Whether changes to package embedded items should be included in results.",
       "default": "false",
       "location": "query"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "includeSubscribed": {
       "type": "boolean",
       "description": "Whether to include shared files and public files the user has opened. When set to false, the list will include owned files plus any shared or public files the user has explictly added to a folder in Drive.",
       "default": "true",
       "location": "query"
      },
      "includeTeamDriveItems": {
       "type": "boolean",
       "description": "Whether Team Drive files or changes should be included in results.",
       "default": "false",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of changes to return.",
       "default": "100",
       "format": "int32",
       "minimum": "1",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "rejectInefficientRequests": {
       "type": "boolean",
       "description": "Whether the request should be rejected if it would generate an inefficient query.",
       "location": "query"
      },
      "returnEfficiencyInfo": {
       "type": "boolean",
       "description": "Whether the request should return efficiency info.",
       "location": "query"
      },
      "sources": {
       "type": "string",
       "description": "Deprecated: use 'spaces' instead. A comma-separated list of sources to query. Supported values are 'GOOGLE_PHOTOS' and 'ANDROID_BACKUP'.",
       "location": "query"
      },
      "spaces": {
       "type": "string",
       "description": "A comma-separated list of spaces to query. Supported values are 'drive', 'appContent', 'appDataFolder', 'photos' and 'androidBackup'.",
       "location": "query"
      },
      "startChangeId": {
       "type": "string",
       "description": "Change ID to start listing changes from.",
       "format": "int64",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "teamDriveId": {
       "type": "string",
       "description": "The Team Drive from which changes will be returned. If specified the change IDs will be reflective of the Team Drive; use the combined Team Drive ID and change ID as an identifier.",
       "location": "query"
      }
     },
     "request": {
      "$ref": "Channel",
      "parameterName": "resource"
     },
     "response": {
      "$ref": "Channel"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ],
     "supportsSubscription": true
    }
   }
  },
  "channels": {
   "methods": {
    "stop": {
     "id": "drive.channels.stop",
     "path": "channels/stop",
     "httpMethod": "POST",
     "description": "Stop watching resources through this channel",
     "request": {
      "$ref": "Channel",
      "parameterName": "resource"
     },
     "scopes": [
      "https://www.googleapis.com/auth/activity",
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.activity",
      "https://www.googleapis.com/auth/drive.activity.readonly",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    }
   }
  },
  "children": {
   "methods": {
    "delete": {
     "id": "drive.children.delete",
     "path": "files/{folderId}/children/{childId}",
     "httpMethod": "DELETE",
     "description": "Removes a child from a folder.",
     "parameters": {
      "childId": {
       "type": "string",
       "description": "The ID of the child.",
       "required": true,
       "location": "path"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "folderId": {
       "type": "string",
       "description": "The ID of the folder.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "folderId",
      "childId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "get": {
     "id": "drive.children.get",
     "path": "files/{folderId}/children/{childId}",
     "httpMethod": "GET",
     "description": "Gets a specific child reference.",
     "parameters": {
      "childId": {
       "type": "string",
       "description": "The ID of the child.",
       "required": true,
       "location": "path"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "folderId": {
       "type": "string",
       "description": "The ID of the folder.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "folderId",
      "childId"
     ],
     "response": {
      "$ref": "ChildReference"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.children.insert",
     "path": "files/{folderId}/children",
     "httpMethod": "POST",
     "description": "Inserts a file into a folder.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "folderId": {
       "type": "string",
       "description": "The ID of the folder.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "folderId"
     ],
     "request": {
      "$ref": "ChildReference"
     },
     "response": {
      "$ref": "ChildReference"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "list": {
     "id": "drive.children.list",
     "path": "files/{folderId}/children",
     "httpMethod": "GET",
     "description": "Lists a folder's children.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "folderId": {
       "type": "string",
       "description": "The ID of the folder.",
       "required": true,
       "location": "path"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of children to return.",
       "default": "100",
       "format": "int32",
       "minimum": "0",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "orderBy": {
       "type": "string",
       "description": "A comma-separated list of sort keys. Valid keys are 'createdDate', 'folder', 'lastViewedByMeDate', 'modifiedByMeDate', 'modifiedDate', 'quotaBytesUsed', 'recency', 'sharedWithMeDate', 'starred', and 'title'. Each key sorts ascending by default, but may be reversed with the 'desc' modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Page token for children.",
       "location": "query"
      },
      "q": {
       "type": "string",
       "description": "Query string for searching children.",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "reverseSort": {
       "type": "boolean",
       "description": "DEPRECATED; use orderBy instead. Whether to reverse the order of the results if sortBy is set.",
       "default": "false",
       "location": "query"
      },
      "secondarySortBy": {
       "type": "string",
       "description": "DEPRECATED; use orderBy instead. The list of sort orders to apply after sortBy.",
       "default": "",
       "pattern": "\\w+(,\\w+)*",
       "location": "query"
      },
      "sortBy": {
       "type": "string",
       "description": "DEPRECATED; use orderBy instead. The sort order for returned files.",
       "enum": [
        "CREATION_DATE",
        "FOLDERS_FIRST",
        "FOLDER_TITLE",
        "LAST_MODIFIED",
        "LAST_MODIFIED_BY_ME",
        "LAST_VIEWED_BY_ME",
        "QUOTA_USED",
        "RECENT",
        "RELEVANCE",
        "SHARED_WITH_ME_DATE",
        "STARRED_FIRST",
        "TITLE"
       ],
       "enumDescriptions": [
        "Sort by the createdDate field of the files. Reverse chronological by default.",
        "Sort folders first.",
        "Sort folders first then sort files by title.",
        "Sort by the modifiedDate field of the files. Reverse chronological by default.",
        "Sort by the modifiedByMeDate field of the files. Reverse chronological by default.",
        "Sort by the lastViewedByMeDate field of the files. Reverse chronological by default.",
        "Sort by the quotaBytesUsed field of the files. In descending order by default.",
        "Sort by max(createdDate, lastViewedByMeDate, modifiedByMeDate) of the files. Reverse chronological by default.",
        "Sort by the relevance of the query results.",
        "Sort by the sharedWithMeDate field of the files. Reverse chronological by default.",
        "Sort starred items first.",
        "Sort by the title field of the files."
       ],
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "folderId"
     ],
     "response": {
      "$ref": "ChildList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    }
   }
  },
  "comments": {
   "methods": {
    "delete": {
     "id": "drive.comments.delete",
     "path": "files/{fileId}/comments/{commentId}",
     "httpMethod": "DELETE",
     "description": "Deletes a comment.",
     "parameters": {
      "commentId": {
       "type": "string",
       "description": "The ID of the comment.",
       "required": true,
       "location": "path"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "commentId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "get": {
     "id": "drive.comments.get",
     "path": "files/{fileId}/comments/{commentId}",
     "httpMethod": "GET",
     "description": "Gets a comment by ID.",
     "parameters": {
      "commentId": {
       "type": "string",
       "description": "The ID of the comment.",
       "required": true,
       "location": "path"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "includeDeleted": {
       "type": "boolean",
       "description": "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "commentId"
     ],
     "response": {
      "$ref": "Comment"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.comments.insert",
     "path": "files/{fileId}/comments",
     "httpMethod": "POST",
     "description": "Creates a new comment on the given file.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "Comment"
     },
     "response": {
      "$ref": "Comment"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "list": {
     "id": "drive.comments.list",
     "path": "files/{fileId}/comments",
     "httpMethod": "GET",
     "description": "Lists a file's comments.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "includeDeleted": {
       "type": "boolean",
       "description": "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.",
       "default": "false",
       "location": "query"
      },
      "includeSuggestions": {
       "type": "boolean",
       "description": "If set, suggested edits will be included in the response.",
       "default": "false",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of discussions to include in the response, used for paging.",
       "default": "20",
       "format": "int32",
       "minimum": "0",
       "maximum": "100",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
       "location": "query"
      },
      "updatedMin": {
       "type": "string",
       "description": "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "CommentList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "patch": {
     "id": "drive.comments.patch",
     "path": "files/{fileId}/comments/{commentId}",
     "httpMethod": "PATCH",
     "description": "Updates an existing comment. This method supports patch semantics.",
     "parameters": {
      "commentId": {
       "type": "string",
       "description": "The ID of the comment.",
       "required": true,
       "location": "path"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "commentId"
     ],
     "request": {
      "$ref": "Comment"
     },
     "response": {
      "$ref": "Comment"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "update": {
     "id": "drive.comments.update",
     "path": "files/{fileId}/comments/{commentId}",
     "httpMethod": "PUT",
     "description": "Updates an existing comment.",
     "parameters": {
      "commentId": {
       "type": "string",
       "description": "The ID of the comment.",
       "required": true,
       "location": "path"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "commentId"
     ],
     "request": {
      "$ref": "Comment"
     },
     "response": {
      "$ref": "Comment"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    }
   }
  },
  "files": {
   "methods": {
    "authorize": {
     "id": "drive.files.authorize",
     "path": "files/{fileId}/authorize",
     "httpMethod": "POST",
     "description": "Authorize an app to access a file.",
     "parameters": {
      "appId": {
       "type": "string",
       "description": "The ID of the app to authorize.",
       "required": true,
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file to authorize the app to.",
       "required": true,
       "location": "path"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "propagate": {
       "type": "boolean",
       "description": "Whether to propagate the app access to children.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "appId"
     ],
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive"
     ]
    },
    "checkPermissions": {
     "id": "drive.files.checkPermissions",
     "path": "files/checkPermissions",
     "httpMethod": "POST",
     "description": "Checks for permission fix options for a role, a set of files, and a set of recipients.",
     "request": {
      "$ref": "CheckPermissionsRequest"
     },
     "response": {
      "$ref": "CheckPermissionsResponse"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive"
     ]
    },
    "copy": {
     "id": "drive.files.copy",
     "path": "files/{fileId}/copy",
     "httpMethod": "POST",
     "description": "Creates a copy of the specified file.",
     "parameters": {
      "convert": {
       "type": "boolean",
       "description": "Whether to convert this file to the corresponding Google Docs format.",
       "default": "false",
       "location": "query"
      },
      "convertTo": {
       "type": "string",
       "description": "If set, requests conversion to the given format. For native Google Docs, valid values are any of the targets in the exportFormats field of the about.get response.",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file to copy.",
       "required": true,
       "location": "path"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "ocr": {
       "type": "boolean",
       "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
       "default": "false",
       "location": "query"
      },
      "ocrLanguage": {
       "type": "string",
       "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "pinned": {
       "type": "boolean",
       "description": "Whether to pin the head revision of the new copy.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "revisionId": {
       "type": "string",
       "description": "The ID of the revision to copy. Only allowed for files with content stored in Drive when conversion is not requested. Two revisions of the same file cannot be copied in a single batch request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "timedTextLanguage": {
       "type": "string",
       "description": "The language of the timed text.",
       "location": "query"
      },
      "timedTextTrackName": {
       "type": "string",
       "description": "The timed text track name.",
       "location": "query"
      },
      "updateViewedDate": {
       "type": "boolean",
       "description": "Whether to update the view date on the copied file.",
       "default": "true",
       "location": "query"
      },
      "visibility": {
       "type": "string",
       "description": "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.",
       "default": "DEFAULT",
       "enum": [
        "DEFAULT",
        "PRIVATE"
       ],
       "enumDescriptions": [
        "The visibility of the new file is determined by the user's default visibility/sharing policies.",
        "The new file will be visible to only the owner."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "File"
     },
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.photos.readonly"
     ]
    },
    "deauthorize": {
     "id": "drive.files.deauthorize",
     "path": "files/{fileId}/deauthorize",
     "httpMethod": "POST",
     "description": "Remove an app's authorization from a file.",
     "parameters": {
      "appId": {
       "type": "string",
       "description": "The ID of the app to deauthorize.",
       "required": true,
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file from which to remove the app's access.",
       "required": true,
       "location": "path"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "appId"
     ],
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive"
     ]
    },
    "delete": {
     "id": "drive.files.delete",
     "path": "files/{fileId}",
     "httpMethod": "DELETE",
     "description": "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file or be an organizer on the parent for Team Drive files.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file to delete.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "emptyTrash": {
     "id": "drive.files.emptyTrash",
     "path": "files/trash",
     "httpMethod": "DELETE",
     "description": "Permanently deletes all of the user's trashed files.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive"
     ]
    },
    "export": {
     "id": "drive.files.export",
     "path": "files/{fileId}/export",
     "httpMethod": "GET",
     "description": "Exports a Google Doc to the requested MIME type and returns the exported content.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mimeType": {
       "type": "string",
       "description": "The MIME type of the format requested for this export.",
       "required": true,
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "mimeType"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.readonly"
     ],
     "supportsMediaDownload": true
    },
    "extract": {
     "id": "drive.files.extract",
     "path": "files/{fileId}/extract",
     "httpMethod": "POST",
     "description": "Extract the contents of an archive file into Drive. Currently supports RAR, TAR/BZ2, TAR/GZIP, and ZIP files.",
     "parameters": {
      "destinationLocationId": {
       "type": "string",
       "description": "The ID of the folder to extract the contents of the archive into.",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID for the archive file. Consists of either a Drive file id or encrypted id for a gmail attachment.",
       "required": true,
       "location": "path"
      },
      "fileName": {
       "type": "string",
       "description": "The name of the archive file to be extracted. Required when origin is GMAIL",
       "location": "query"
      },
      "fileSize": {
       "type": "string",
       "description": "The size of the archive file to be previewed. Required when origin is GMAIL",
       "format": "int64",
       "location": "query"
      },
      "mimeType": {
       "type": "string",
       "description": "The mime type of the archive file to be extracted. Required when origin is GMAIL",
       "location": "query"
      },
      "origin": {
       "type": "string",
       "description": "The origin of the file preview request.",
       "default": "DRIVE",
       "enum": [
        "DRIVE",
        "GMAIL"
       ],
       "enumDescriptions": [
        "Indicates the file to be previewed is from the user's Drive account.",
        "Indicates the file to be previewed is from a gmail attachment."
       ],
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "ArchiveExtractionJob"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "extractcancel": {
     "id": "drive.files.extractcancel",
     "path": "extractionJobs/{jobId}",
     "httpMethod": "DELETE",
     "description": "Cancel an archive extraction job by the job ID",
     "parameters": {
      "jobId": {
       "type": "string",
       "description": "The ID for the archive extraction job.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "jobId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "extractstatus": {
     "id": "drive.files.extractstatus",
     "path": "extractionJobs/{jobId}",
     "httpMethod": "GET",
     "description": "Retrieve the status of an archive extraction job by the job ID",
     "parameters": {
      "jobId": {
       "type": "string",
       "description": "The ID for the archive extraction job.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "jobId"
     ],
     "response": {
      "$ref": "ArchiveExtractionJob"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "fixPermissions": {
     "id": "drive.files.fixPermissions",
     "path": "files/fixPermissions",
     "httpMethod": "POST",
     "description": "Executes a permission fix option for a role, a set of files, and a set of recipients.",
     "request": {
      "$ref": "FixPermissionsRequest"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive"
     ]
    },
    "generateId": {
     "id": "drive.files.generateId",
     "path": "files/generateId",
     "httpMethod": "POST",
     "description": "Generates a file ID based on the provided local ID.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "request": {
      "$ref": "File"
     },
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "generateIds": {
     "id": "drive.files.generateIds",
     "path": "files/generateIds",
     "httpMethod": "GET",
     "description": "Generates a set of file IDs which can be provided in insert requests.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of IDs to return.",
       "default": "10",
       "format": "int32",
       "minimum": "1",
       "maximum": "1000",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "space": {
       "type": "string",
       "description": "The space in which the IDs can be used to create new files. Supported values are 'drive' and 'appDataFolder'.",
       "default": "drive",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "response": {
      "$ref": "GeneratedIds"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "get": {
     "id": "drive.files.get",
     "path": "files/{fileId}",
     "httpMethod": "GET",
     "description": "Gets a file's metadata by ID.",
     "parameters": {
      "acknowledgeAbuse": {
       "type": "boolean",
       "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files.",
       "default": "false",
       "location": "query"
      },
      "allProperties": {
       "type": "boolean",
       "description": "Whether to retrieve all properties, not just those visible to the app.",
       "default": "false",
       "location": "query"
      },
      "embedOrigin": {
       "type": "string",
       "description": "The origin in which the sharing widget will be embedded. This should be supplied when requesting the shareLink field.",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID for the file in question.",
       "required": true,
       "location": "path"
      },
      "fileScopeAppIds": {
       "type": "string",
       "description": "DEPRECATED; no longer needed. A comma separated list of app IDs. If set the result will only include a file inside the app data folder if it could be opened by any of the specified app IDs with the drive.appdata scope. Requires the ALL_APPDATA scope.",
       "location": "query"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "This parameter is deprecated and has no function.",
       "enum": [
        "BASIC",
        "FULL"
       ],
       "enumDescriptions": [
        "Deprecated",
        "Deprecated"
       ],
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "rejectInefficientRequests": {
       "type": "boolean",
       "description": "Whether the request should be rejected if it would generate an inefficient query.",
       "location": "query"
      },
      "reportPermissionErrors": {
       "type": "boolean",
       "description": "Whether the request should return 403 instead 404 if the file exists but the user doesn't have read access. This option is not compatible with the deprecated updateViewedDate parameter. If set for any item in a batch, it will be set for all.",
       "location": "query"
      },
      "returnEfficiencyInfo": {
       "type": "boolean",
       "description": "Whether the request should return efficiency info.",
       "location": "query"
      },
      "revisionId": {
       "type": "string",
       "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
       "location": "query"
      },
      "sources": {
       "type": "string",
       "description": "Deprecated. This parameter is no longer necessary.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "updateViewedDate": {
       "type": "boolean",
       "description": "Deprecated: Use files.update with modifiedDateBehavior=noChange, updateViewedDate=true and an empty request body.",
       "default": "false",
       "location": "query"
      },
      "useDomainAdminAccess": {
       "type": "boolean",
       "description": "DO NOT USE. Only intended for the sharing UI until admin file support launch.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ],
     "supportsMediaDownload": true,
     "supportsSubscription": true
    },
    "insert": {
     "id": "drive.files.insert",
     "path": "files",
     "httpMethod": "POST",
     "description": "Insert a new file.",
     "parameters": {
      "convert": {
       "type": "boolean",
       "description": "Whether to convert this file to the corresponding Google Docs format.",
       "default": "false",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "ocr": {
       "type": "boolean",
       "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
       "default": "false",
       "location": "query"
      },
      "ocrLanguage": {
       "type": "string",
       "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "pinned": {
       "type": "boolean",
       "description": "Whether to pin the head revision of the uploaded file.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "storagePolicy": {
       "type": "string",
       "description": "For eligible files (e.g. image and video) whether to store the data at original or compressed high-quality resolution. Valid values are 'original' and 'highQuality'.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "timedTextLanguage": {
       "type": "string",
       "description": "The language of the timed text.",
       "location": "query"
      },
      "timedTextTrackName": {
       "type": "string",
       "description": "The timed text track name.",
       "location": "query"
      },
      "updateViewedDate": {
       "type": "boolean",
       "description": "Whether to update the view date when inserting the file.",
       "default": "true",
       "location": "query"
      },
      "useContentAsIndexableText": {
       "type": "boolean",
       "description": "Whether to use the content as indexable text.",
       "default": "false",
       "location": "query"
      },
      "visibility": {
       "type": "string",
       "description": "The visibility of the new file. This parameter is only relevant when convert=false.",
       "default": "DEFAULT",
       "enum": [
        "DEFAULT",
        "PRIVATE"
       ],
       "enumDescriptions": [
        "The visibility of the new file is determined by the user's default visibility/sharing policies.",
        "The new file will be visible to only the owner."
       ],
       "location": "query"
      }
     },
     "request": {
      "$ref": "File"
     },
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file"
     ],
     "supportsMediaUpload": true,
     "mediaUpload": {
      "accept": [
       "*/*"
      ],
      "maxSize": "5120GB",
      "protocols": {
       "simple": {
        "multipart": true,
        "path": "/upload/drive/v2internal/files"
       },
       "resumable": {
        "multipart": true,
        "path": "/resumable/upload/drive/v2internal/files"
       }
      }
     },
     "supportsSubscription": true
    },
    "list": {
     "id": "drive.files.list",
     "path": "files",
     "httpMethod": "GET",
     "description": "Lists the user's files.",
     "parameters": {
      "allProperties": {
       "type": "boolean",
       "description": "Whether to retrieve all properties, not just those visible to the app.",
       "default": "false",
       "location": "query"
      },
      "appDataFilter": {
       "type": "string",
       "description": "Deprecated: use 'spaces' instead. Specifies whether to return App Data, non-App Data, or both in query results.",
       "default": "ALL_FILES",
       "enum": [
        "ALL_FILES",
        "NO_APP_DATA",
        "ONLY_APP_DATA"
       ],
       "enumDescriptions": [
        "Specifies that the query should return App Data and non-App Data files.",
        "Specifies that the query should not return App Data files.",
        "Specifies that the query should only return App Data files."
       ],
       "location": "query"
      },
      "corpora": {
       "type": "string",
       "description": "Comma-separated list of bodies of items (files/documents) to which the query applies. Supported bodies are 'default', 'domain', 'teamDrive' and 'allTeamDrives'. 'allTeamDrives' must be combined with 'default'; all other values must be used in isolation. Prefer 'default' or 'teamDrive' to 'allTeamDrives' for efficiency.",
       "location": "query"
      },
      "corpus": {
       "type": "string",
       "description": "The body of items (files/documents) to which the query applies. Deprecated: use 'corpora' instead.",
       "enum": [
        "DEFAULT",
        "DOMAIN"
       ],
       "enumDescriptions": [
        "The items that the user has accessed. This encompasses Team Drive items that the user has recently accessed.",
        "Items shared to the user's domain."
       ],
       "location": "query"
      },
      "embedOrigin": {
       "type": "string",
       "description": "The origin in which the sharing widget will be embedded. This should be supplied when requesting the shareLink field.",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileScopeAppIds": {
       "type": "string",
       "description": "A comma separated list of app IDs. If set, the list will also include files inside the app data folder that could be opened with any of the given apps with drive.appdata scope. Requires the ALL_APPDATA scope.",
       "location": "query"
      },
      "includeEmbeds": {
       "type": "boolean",
       "description": "Whether to include items embedded in a package in the results.",
       "default": "false",
       "location": "query"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "includeTeamDriveItems": {
       "type": "boolean",
       "description": "Whether Team Drive items should be included in results.",
       "default": "false",
       "location": "query"
      },
      "includeUnsubscribed": {
       "type": "boolean",
       "description": "For Cello, allow fetching unsubscribed children to complete backfill.",
       "default": "false",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of files to return per page. Partial or empty result pages are possible even before the end of the files list has been reached.",
       "default": "100",
       "format": "int32",
       "minimum": "0",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "orderBy": {
       "type": "string",
       "description": "A comma-separated list of sort keys. Valid keys are 'createdDate', 'folder', 'lastViewedByMeDate', 'modifiedByMeDate', 'modifiedDate', 'quotaBytesUsed', 'recursiveFileCount', 'recursiveFileSize', 'recursiveQuotaBytesUsed', 'recency', 'sharedWithMeDate', 'starred', 'title', 'title_natural', and 'trashedDate'. Each key sorts ascending by default, but may be reversed with the 'desc' modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Page token for files.",
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "This parameter is deprecated and has no function.",
       "enum": [
        "BASIC",
        "FULL"
       ],
       "enumDescriptions": [
        "Deprecated",
        "Deprecated"
       ],
       "location": "query"
      },
      "q": {
       "type": "string",
       "description": "Query string for searching files.",
       "location": "query"
      },
      "rawUserQuery": {
       "type": "string",
       "description": "The unmodified user-specified query string.",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "rejectInefficientRequests": {
       "type": "boolean",
       "description": "Whether the request should be rejected if it would generate an inefficient query.",
       "location": "query"
      },
      "returnEfficiencyInfo": {
       "type": "boolean",
       "description": "Whether the request should return efficiency info.",
       "location": "query"
      },
      "reverseSort": {
       "type": "boolean",
       "description": "DEPRECATED; use orderBy instead. Whether to reverse the order of the results if sortBy is set.",
       "default": "false",
       "location": "query"
      },
      "searchSessionData": {
       "type": "string",
       "description": "Opaque search session data from apps search quality.",
       "location": "query"
      },
      "secondarySortBy": {
       "type": "string",
       "description": "DEPRECATED; use orderBy instead. The list of sort orders to apply after sortBy.",
       "default": "",
       "pattern": "\\w+(,\\w+)*",
       "location": "query"
      },
      "sortBy": {
       "type": "string",
       "description": "DEPRECATED; use orderBy instead. The sort order for returned files.",
       "enum": [
        "CREATION_DATE",
        "FOLDERS_FIRST",
        "FOLDER_TITLE",
        "LAST_MODIFIED",
        "LAST_MODIFIED_BY_ME",
        "LAST_VIEWED_BY_ME",
        "QUOTA_USED",
        "RECENT",
        "RELEVANCE",
        "SHARED_WITH_ME_DATE",
        "STARRED_FIRST",
        "TITLE"
       ],
       "enumDescriptions": [
        "Sort by the createdDate field of the files. Reverse chronological by default.",
        "Sort folders first.",
        "Sort folders first then sort files by title.",
        "Sort by the modifiedDate field of the files. Reverse chronological by default.",
        "Sort by the modifiedByMeDate field of the files. Reverse chronological by default.",
        "Sort by the lastViewedByMeDate field of the files. Reverse chronological by default.",
        "Sort by the quotaBytesUsed field of the files. In descending order by default.",
        "Sort by max(createdDate, lastViewedByMeDate, modifiedByMeDate) of the files. Reverse chronological by default.",
        "Sort by the relevance of the query results.",
        "Sort by the sharedWithMeDate field of the files. Reverse chronological by default.",
        "Sort starred items first.",
        "Sort by the title field of the files."
       ],
       "location": "query"
      },
      "sources": {
       "type": "string",
       "description": "Deprecated: use 'spaces' instead. A comma-separated list of sources to query. Supported values are 'GOOGLE_PHOTOS' and 'ANDROID_BACKUP'.",
       "location": "query"
      },
      "spaces": {
       "type": "string",
       "description": "A comma-separated list of spaces to query. Supported values are 'drive', 'appContent', 'appDataFolder', 'photos' and 'androidBackup'. 'GOOGLE_PHOTOS' is deprecated but supported in place of 'photos'.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "teamDriveId": {
       "type": "string",
       "description": "ID of Team Drive to search.",
       "location": "query"
      }
     },
     "response": {
      "$ref": "FileList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "listAppliedCategories": {
     "id": "drive.files.listAppliedCategories",
     "path": "files/{fileId}/listAppliedCategories",
     "httpMethod": "GET",
     "description": "Lists categories that have been applied to a file.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID for the file or Team Drive.",
       "required": true,
       "location": "path"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of categories to return per page. When not set, at most 100 results will be returned.",
       "format": "int32",
       "minimum": "1",
       "maximum": "100",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",
       "location": "query"
      },
      "q": {
       "type": "string",
       "description": "Query string for searching categories.",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "AppliedCategoriesList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "patch": {
     "id": "drive.files.patch",
     "path": "files/{fileId}",
     "httpMethod": "PATCH",
     "description": "Updates file metadata and/or content. This method supports patch semantics.",
     "parameters": {
      "addParents": {
       "type": "string",
       "description": "Comma-separated list of parent IDs to add.",
       "location": "query"
      },
      "baseRevision": {
       "type": "string",
       "description": "Base revision to use when uploading using partial updates.",
       "location": "query"
      },
      "confirmed": {
       "type": "boolean",
       "description": "Whether the user has confirmed any warnings for the update.",
       "default": "true",
       "location": "query"
      },
      "convert": {
       "type": "boolean",
       "description": "Whether to convert this file to the corresponding Google Docs format.",
       "default": "false",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file to update.",
       "required": true,
       "location": "path"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "languageCode": {
       "type": "string",
       "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
       "location": "query"
      },
      "modifiedDateBehavior": {
       "type": "string",
       "description": "The behavior of the last modified date. This overrides setModifiedDate.",
       "enum": [
        "DRIVE_UI",
        "DRIVE_UI_OFFLINE",
        "NO_CHANGE",
        "SET_FROM_BODY",
        "SET_FROM_BODY_OR_NOW",
        "SET_IF_NEEDED",
        "SET_NOW"
       ],
       "enumDescriptions": [
        "Set the modified date to the current time if a field is changing for which the Drive UI requires the modification date to be updated.",
        "Set the modified date to the value provided in the body of the request if a field is changing for which the Drive UI requires the modification date to be updated.",
        "Maintain the previous value of the modified date.",
        "Set the modified date to the value provided in the body of the request. No change if no value was provided.",
        "Set the modified date to the value provided in the body of the request, or to the current time if no value was provided.",
        "Set the modified date to the current time if changes are made to any field that is not per-user.",
        "Set the modified date to the current time."
       ],
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "newRevision": {
       "type": "boolean",
       "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions.",
       "default": "true",
       "location": "query"
      },
      "ocr": {
       "type": "boolean",
       "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
       "default": "false",
       "location": "query"
      },
      "ocrLanguage": {
       "type": "string",
       "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "pinned": {
       "type": "boolean",
       "description": "Whether to pin the new revision.",
       "default": "false",
       "location": "query"
      },
      "precondition": {
       "type": "string",
       "description": "Query string for file update preconditions.",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "removeParents": {
       "type": "string",
       "description": "Comma-separated list of parent IDs to remove.",
       "location": "query"
      },
      "setModifiedDate": {
       "type": "boolean",
       "description": "Whether to set the modified date with the supplied modified date.",
       "default": "false",
       "location": "query"
      },
      "storagePolicy": {
       "type": "string",
       "description": "For eligible files (e.g. image and video) whether to store the data at original compressed high-quality resolution. Valid values are 'original' and 'highQuality'",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "timedTextLanguage": {
       "type": "string",
       "description": "The language of the timed text.",
       "location": "query"
      },
      "timedTextTrackName": {
       "type": "string",
       "description": "The timed text track name.",
       "location": "query"
      },
      "updateViewedDate": {
       "type": "boolean",
       "description": "Whether to update the view date after successfully updating the file.",
       "default": "true",
       "location": "query"
      },
      "useContentAsIndexableText": {
       "type": "boolean",
       "description": "Whether to use the content as indexable text.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "File"
     },
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.scripts"
     ]
    },
    "preview": {
     "id": "drive.files.preview",
     "path": "files/{fileId}/preview",
     "httpMethod": "GET",
     "description": "Generate a preview for an archive file. Currently supports RAR, TAR/BZ2, TAR/GZIP, and ZIP files.",
     "parameters": {
      "c": {
       "type": "string",
       "description": "Encoded credentials. An optional argument that could include an invite token.",
       "location": "query"
      },
      "ck": {
       "type": "string",
       "description": "The client key for encoded credentials.",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID for the archive file. Consists of either a Drive file id or encrypted id for a gmail attachment.",
       "required": true,
       "location": "path"
      },
      "fileName": {
       "type": "string",
       "description": "The name of the archive file to be previewed. Required when origin is GMAIL",
       "location": "query"
      },
      "fileSize": {
       "type": "string",
       "description": "The size of the archive file to be previewed. Required when origin is GMAIL",
       "format": "int64",
       "location": "query"
      },
      "mimeType": {
       "type": "string",
       "description": "The mime type of the archive file to be previewed. Required when origin is GMAIL",
       "location": "query"
      },
      "origin": {
       "type": "string",
       "description": "The origin of the file preview request.",
       "default": "DRIVE",
       "enum": [
        "DRIVE",
        "GMAIL"
       ],
       "enumDescriptions": [
        "Indicates the file to be previewed is from the user's Drive account.",
        "Indicates the file to be previewed is from a gmail attachment."
       ],
       "location": "query"
      },
      "quotaBytes": {
       "type": "string",
       "description": "The user's available quota, in bytes.",
       "format": "int64",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "FilePreview"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "remove": {
     "id": "drive.files.remove",
     "path": "files/{fileId}/remove",
     "httpMethod": "POST",
     "description": "If user owns the file, trashes it; else if parentId is provided, removes the file from that folder; otherwise, unsubscribes the user. This method is unsupported for Team Drive files.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file to remove.",
       "required": true,
       "location": "path"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "parentId": {
       "type": "string",
       "description": "The ID of the folder from which to remove the file.",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "requestAccess": {
     "id": "drive.files.requestAccess",
     "path": "files/{fileId}/requestAccess",
     "httpMethod": "POST",
     "description": "Requests access to the file for the current user. Sends an email to the owner of the file requesting that they share the file with the requesting user.",
     "parameters": {
      "emailMessage": {
       "type": "string",
       "description": "An optional custom message to include in notification emails.",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file the user is requesting access to.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "sendShareNotification": {
     "id": "drive.files.sendShareNotification",
     "path": "files/{fileId}/sendShareNotification",
     "httpMethod": "POST",
     "description": "Sends a sharing notification message to one or more users.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file for which a sharing notification should be sent.",
       "required": true,
       "location": "path"
      },
      "languageCode": {
       "type": "string",
       "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "ShareNotificationRequest"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "syncPhotoWithSha1": {
     "id": "drive.files.syncPhotoWithSha1",
     "path": "files/syncPhotoWithSha1",
     "httpMethod": "POST",
     "description": "Syncs a photo into Drive. If the photo already exists in Drive, returns the existing File. Otherwise, it syncs the photo and returns the newly synced file.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "request": {
      "$ref": "SyncPhotoWithSha1Request"
     },
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive"
     ]
    },
    "touch": {
     "id": "drive.files.touch",
     "path": "files/{fileId}/touch",
     "httpMethod": "POST",
     "description": "Set the file's updated time to the current server time.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file to update.",
       "required": true,
       "location": "path"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata"
     ]
    },
    "trash": {
     "id": "drive.files.trash",
     "path": "files/{fileId}/trash",
     "httpMethod": "POST",
     "description": "Moves a file to the trash. The currently authenticated user must own the file or be an organizer on the parent for Team Drive files.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file to trash.",
       "required": true,
       "location": "path"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "untrash": {
     "id": "drive.files.untrash",
     "path": "files/{fileId}/untrash",
     "httpMethod": "POST",
     "description": "Restores a file from the trash.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file to untrash.",
       "required": true,
       "location": "path"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "update": {
     "id": "drive.files.update",
     "path": "files/{fileId}",
     "httpMethod": "PUT",
     "description": "Updates file metadata and/or content.",
     "parameters": {
      "addParents": {
       "type": "string",
       "description": "Comma-separated list of parent IDs to add.",
       "location": "query"
      },
      "baseRevision": {
       "type": "string",
       "description": "Base revision to use when uploading using partial updates.",
       "location": "query"
      },
      "confirmed": {
       "type": "boolean",
       "description": "Whether the user has confirmed any warnings for the update.",
       "default": "true",
       "location": "query"
      },
      "convert": {
       "type": "boolean",
       "description": "Whether to convert this file to the corresponding Google Docs format.",
       "default": "false",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file to update.",
       "required": true,
       "location": "path"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "languageCode": {
       "type": "string",
       "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
       "location": "query"
      },
      "modifiedDateBehavior": {
       "type": "string",
       "description": "The behavior of the last modified date. This overrides setModifiedDate.",
       "enum": [
        "DRIVE_UI",
        "DRIVE_UI_OFFLINE",
        "NO_CHANGE",
        "SET_FROM_BODY",
        "SET_FROM_BODY_OR_NOW",
        "SET_IF_NEEDED",
        "SET_NOW"
       ],
       "enumDescriptions": [
        "Set the modified date to the current time if a field is changing for which the Drive UI requires the modification date to be updated.",
        "Set the modified date to the value provided in the body of the request if a field is changing for which the Drive UI requires the modification date to be updated.",
        "Maintain the previous value of the modified date.",
        "Set the modified date to the value provided in the body of the request. No change if no value was provided.",
        "Set the modified date to the value provided in the body of the request, or to the current time if no value was provided.",
        "Set the modified date to the current time if changes are made to any field that is not per-user.",
        "Set the modified date to the current time."
       ],
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "newRevision": {
       "type": "boolean",
       "description": "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions.",
       "default": "true",
       "location": "query"
      },
      "ocr": {
       "type": "boolean",
       "description": "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.",
       "default": "false",
       "location": "query"
      },
      "ocrLanguage": {
       "type": "string",
       "description": "If ocr is true, hints at the language to use. Valid values are ISO 639-1 codes.",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "pinned": {
       "type": "boolean",
       "description": "Whether to pin the new revision.",
       "default": "false",
       "location": "query"
      },
      "precondition": {
       "type": "string",
       "description": "Query string for file update preconditions.",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "removeParents": {
       "type": "string",
       "description": "Comma-separated list of parent IDs to remove.",
       "location": "query"
      },
      "setModifiedDate": {
       "type": "boolean",
       "description": "Whether to set the modified date with the supplied modified date.",
       "default": "false",
       "location": "query"
      },
      "storagePolicy": {
       "type": "string",
       "description": "For eligible files (e.g. image and video) whether to store the data at original compressed high-quality resolution. Valid values are 'original' and 'highQuality'.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "timedTextLanguage": {
       "type": "string",
       "description": "The language of the timed text.",
       "location": "query"
      },
      "timedTextTrackName": {
       "type": "string",
       "description": "The timed text track name.",
       "location": "query"
      },
      "updateViewedDate": {
       "type": "boolean",
       "description": "Whether to update the view date after successfully updating the file.",
       "default": "true",
       "location": "query"
      },
      "useContentAsIndexableText": {
       "type": "boolean",
       "description": "Whether to use the content as indexable text.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "File"
     },
     "response": {
      "$ref": "File"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.scripts"
     ],
     "supportsMediaDownload": true,
     "supportsMediaUpload": true,
     "mediaUpload": {
      "accept": [
       "*/*"
      ],
      "maxSize": "5120GB",
      "protocols": {
       "simple": {
        "multipart": true,
        "path": "/upload/drive/v2internal/files/{fileId}"
       },
       "resumable": {
        "multipart": true,
        "path": "/resumable/upload/drive/v2internal/files/{fileId}"
       }
      }
     }
    },
    "updateAppliedCategories": {
     "id": "drive.files.updateAppliedCategories",
     "path": "files/{fileId}/updateAppliedCategories",
     "httpMethod": "POST",
     "description": "Updates categories that have been applied to a file.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file to which the categories belong.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "UpdateAppliedCategories"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "watch": {
     "id": "drive.files.watch",
     "path": "files/{fileId}/watch",
     "httpMethod": "POST",
     "description": "Subscribe to changes on a file",
     "parameters": {
      "acknowledgeAbuse": {
       "type": "boolean",
       "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files.",
       "default": "false",
       "location": "query"
      },
      "allProperties": {
       "type": "boolean",
       "description": "Whether to retrieve all properties, not just those visible to the app.",
       "default": "false",
       "location": "query"
      },
      "embedOrigin": {
       "type": "string",
       "description": "The origin in which the sharing widget will be embedded. This should be supplied when requesting the shareLink field.",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID for the file in question.",
       "required": true,
       "location": "path"
      },
      "fileScopeAppIds": {
       "type": "string",
       "description": "DEPRECATED; no longer needed. A comma separated list of app IDs. If set the result will only include a file inside the app data folder if it could be opened by any of the specified app IDs with the drive.appdata scope. Requires the ALL_APPDATA scope.",
       "location": "query"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "projection": {
       "type": "string",
       "description": "This parameter is deprecated and has no function.",
       "enum": [
        "BASIC",
        "FULL"
       ],
       "enumDescriptions": [
        "Deprecated",
        "Deprecated"
       ],
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "rejectInefficientRequests": {
       "type": "boolean",
       "description": "Whether the request should be rejected if it would generate an inefficient query.",
       "location": "query"
      },
      "reportPermissionErrors": {
       "type": "boolean",
       "description": "Whether the request should return 403 instead 404 if the file exists but the user doesn't have read access. This option is not compatible with the deprecated updateViewedDate parameter. If set for any item in a batch, it will be set for all.",
       "location": "query"
      },
      "returnEfficiencyInfo": {
       "type": "boolean",
       "description": "Whether the request should return efficiency info.",
       "location": "query"
      },
      "revisionId": {
       "type": "string",
       "description": "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.",
       "location": "query"
      },
      "sources": {
       "type": "string",
       "description": "Deprecated. This parameter is no longer necessary.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "updateViewedDate": {
       "type": "boolean",
       "description": "Deprecated: Use files.update with modifiedDateBehavior=noChange, updateViewedDate=true and an empty request body.",
       "default": "false",
       "location": "query"
      },
      "useDomainAdminAccess": {
       "type": "boolean",
       "description": "DO NOT USE. Only intended for the sharing UI until admin file support launch.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "Channel",
      "parameterName": "resource"
     },
     "response": {
      "$ref": "Channel"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ],
     "supportsMediaDownload": true,
     "supportsSubscription": true
    }
   }
  },
  "nextdocpredictions": {
   "methods": {
    "list": {
     "id": "drive.nextdocpredictions.list",
     "path": "nextdocpredictions",
     "httpMethod": "GET",
     "description": "Lists predictions for the documents the user will open.",
     "parameters": {
      "corpora": {
       "type": "string",
       "description": "Comma-separated list of corpora under which to predict documents. Supported options are 'default' and 'teamDrive'. Currently leaving this blank implies 'default'.",
       "default": "default",
       "location": "query"
      },
      "languageCode": {
       "type": "string",
       "description": "The locale to use for any localization.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of predictions to return.",
       "default": "10",
       "format": "int32",
       "minimum": "1",
       "maximum": "20",
       "location": "query"
      },
      "teamDriveId": {
       "type": "string",
       "description": "ID for a Team Drive under which to predict documents.",
       "location": "query"
      }
     },
     "response": {
      "$ref": "NextDocPredictionList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive"
     ]
    }
   }
  },
  "notifications": {
   "methods": {
    "get": {
     "id": "drive.notifications.get",
     "path": "notifications/{notificationId}",
     "httpMethod": "GET",
     "description": "Gets a notification by ID.",
     "parameters": {
      "locale": {
       "type": "string",
       "description": "Locale in which to localize messages.",
       "location": "query"
      },
      "notificationId": {
       "type": "string",
       "description": "The ID for the notification in question.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "notificationId"
     ],
     "response": {
      "$ref": "Notification"
     },
     "scopes": [
      "https://www.googleapis.com/auth/activity",
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.activity",
      "https://www.googleapis.com/auth/drive.activity.readonly",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "watch": {
     "id": "drive.notifications.watch",
     "path": "notifications/watch",
     "httpMethod": "POST",
     "description": "Subscribe to notifications",
     "request": {
      "$ref": "Channel",
      "parameterName": "resource"
     },
     "response": {
      "$ref": "Channel"
     },
     "scopes": [
      "https://www.googleapis.com/auth/activity",
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.activity",
      "https://www.googleapis.com/auth/drive.activity.readonly",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ],
     "supportsSubscription": true
    }
   }
  },
  "parents": {
   "methods": {
    "delete": {
     "id": "drive.parents.delete",
     "path": "files/{fileId}/parents/{parentId}",
     "httpMethod": "DELETE",
     "description": "Removes a parent from a file.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "parentId": {
       "type": "string",
       "description": "The ID of the parent.",
       "required": true,
       "location": "path"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "parentId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "get": {
     "id": "drive.parents.get",
     "path": "files/{fileId}/parents/{parentId}",
     "httpMethod": "GET",
     "description": "Gets a specific parent reference.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "parentId": {
       "type": "string",
       "description": "The ID of the parent.",
       "required": true,
       "location": "path"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "parentId"
     ],
     "response": {
      "$ref": "ParentReference"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.parents.insert",
     "path": "files/{fileId}/parents",
     "httpMethod": "POST",
     "description": "Adds a parent folder for a file.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "ParentReference"
     },
     "response": {
      "$ref": "ParentReference"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "list": {
     "id": "drive.parents.list",
     "path": "files/{fileId}/parents",
     "httpMethod": "GET",
     "description": "Lists a file's parents.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "ParentList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    }
   }
  },
  "permissions": {
   "methods": {
    "delete": {
     "id": "drive.permissions.delete",
     "path": "files/{fileId}/permissions/{permissionId}",
     "httpMethod": "DELETE",
     "description": "Deletes a permission from a file or Team Drive.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID for the file or Team Drive.",
       "required": true,
       "location": "path"
      },
      "languageCode": {
       "type": "string",
       "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "permissionId": {
       "type": "string",
       "description": "The ID for the permission.",
       "required": true,
       "location": "path"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "useDomainAdminAccess": {
       "type": "boolean",
       "description": "Whether the request should be treated as if it was issued by a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the item belongs.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "permissionId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "get": {
     "id": "drive.permissions.get",
     "path": "files/{fileId}/permissions/{permissionId}",
     "httpMethod": "GET",
     "description": "Gets a permission by ID.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID for the file or Team Drive.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "permissionId": {
       "type": "string",
       "description": "The ID for the permission.",
       "required": true,
       "location": "path"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "useDomainAdminAccess": {
       "type": "boolean",
       "description": "Whether the request should be treated as if it was issued by a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the item belongs.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "permissionId"
     ],
     "response": {
      "$ref": "Permission"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "getIdForEmail": {
     "id": "drive.permissions.getIdForEmail",
     "path": "permissionIds/{email}",
     "httpMethod": "GET",
     "description": "Returns the permission ID for an email address.",
     "parameters": {
      "email": {
       "type": "string",
       "description": "The email address for which to return a permission ID",
       "required": true,
       "location": "path"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "email"
     ],
     "response": {
      "$ref": "PermissionId"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.apps.readonly",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.permissions.insert",
     "path": "files/{fileId}/permissions",
     "httpMethod": "POST",
     "description": "Inserts a permission for a file or Team Drive.",
     "parameters": {
      "confirmed": {
       "type": "boolean",
       "description": "Whether the user has confirmed the sharing request.",
       "default": "true",
       "location": "query"
      },
      "emailMessage": {
       "type": "string",
       "description": "A custom message to include in notification emails.",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID for the file or Team Drive.",
       "required": true,
       "location": "path"
      },
      "languageCode": {
       "type": "string",
       "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "sendNotificationEmails": {
       "type": "boolean",
       "description": "Whether to send notification emails when sharing to users or groups.",
       "default": "true",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "useDomainAdminAccess": {
       "type": "boolean",
       "description": "Whether the request should be treated as if it was issued by a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the item belongs.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "Permission"
     },
     "response": {
      "$ref": "Permission"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "list": {
     "id": "drive.permissions.list",
     "path": "files/{fileId}/permissions",
     "httpMethod": "GET",
     "description": "Lists a file's or Team Drive's permissions.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID for the file or Team Drive.",
       "required": true,
       "location": "path"
      },
      "includePermissionsForView": {
       "type": "string",
       "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of permissions to return per page. When not set for files in a Team Drive, at most 100 results will be returned. When not set for files that are not in a Team Drive, the entire list will be returned.",
       "format": "int32",
       "minimum": "1",
       "maximum": "100",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "useDomainAdminAccess": {
       "type": "boolean",
       "description": "Whether the request should be treated as if it was issued by a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the item belongs.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "PermissionList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "patch": {
     "id": "drive.permissions.patch",
     "path": "files/{fileId}/permissions/{permissionId}",
     "httpMethod": "PATCH",
     "description": "Updates a permission using patch semantics.",
     "parameters": {
      "clearExpiration": {
       "type": "boolean",
       "description": "DO NOT USE. USE removeExpiration.",
       "default": "false",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID for the file or Team Drive.",
       "required": true,
       "location": "path"
      },
      "languageCode": {
       "type": "string",
       "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "permissionId": {
       "type": "string",
       "description": "The ID for the permission.",
       "required": true,
       "location": "path"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "removeExpiration": {
       "type": "boolean",
       "description": "Whether to remove the expiration date.",
       "default": "true",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "transferOwnership": {
       "type": "boolean",
       "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
       "default": "false",
       "location": "query"
      },
      "useDomainAdminAccess": {
       "type": "boolean",
       "description": "Whether the request should be treated as if it was issued by a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the item belongs.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "permissionId"
     ],
     "request": {
      "$ref": "Permission"
     },
     "response": {
      "$ref": "Permission"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "update": {
     "id": "drive.permissions.update",
     "path": "files/{fileId}/permissions/{permissionId}",
     "httpMethod": "PUT",
     "description": "Updates a permission.",
     "parameters": {
      "clearExpiration": {
       "type": "boolean",
       "description": "DO NOT USE. USE removeExpiration.",
       "default": "false",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID for the file or Team Drive.",
       "required": true,
       "location": "path"
      },
      "languageCode": {
       "type": "string",
       "description": "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "permissionId": {
       "type": "string",
       "description": "The ID for the permission.",
       "required": true,
       "location": "path"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "removeExpiration": {
       "type": "boolean",
       "description": "Whether to remove the expiration date.",
       "default": "true",
       "location": "query"
      },
      "supportsTeamDrives": {
       "type": "boolean",
       "description": "Whether the requesting application supports Team Drives.",
       "default": "false",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "transferOwnership": {
       "type": "boolean",
       "description": "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.",
       "default": "false",
       "location": "query"
      },
      "useDomainAdminAccess": {
       "type": "boolean",
       "description": "Whether the request should be treated as if it was issued by a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the item belongs.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "permissionId"
     ],
     "request": {
      "$ref": "Permission"
     },
     "response": {
      "$ref": "Permission"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    }
   }
  },
  "predictions": {
   "methods": {
    "nextdoc": {
     "id": "drive.predictions.nextdoc",
     "path": "predictions",
     "httpMethod": "GET",
     "description": "Lists predictions for the documents the user will open.",
     "parameters": {
      "locale": {
       "type": "string",
       "description": "The locale to use for any localization.",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of predictions to return.",
       "default": "10",
       "format": "int32",
       "minimum": "1",
       "maximum": "20",
       "location": "query"
      },
      "preselectedIds": {
       "type": "string",
       "description": "A comma-separated list of the IDs of documents which have been pre-selected by the client. These IDs may influence the predictions, in a way that depends on the predictor making the predictions. The number of IDs should not exceed 10.",
       "location": "query"
      }
     },
     "response": {
      "$ref": "PredictionList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive"
     ]
    }
   }
  },
  "properties": {
   "methods": {
    "delete": {
     "id": "drive.properties.delete",
     "path": "files/{fileId}/properties/{propertyKey}",
     "httpMethod": "DELETE",
     "description": "Deletes a property.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "propertyKey": {
       "type": "string",
       "description": "The key of the property.",
       "required": true,
       "location": "path"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "visibility": {
       "type": "string",
       "description": "The visibility of the property.",
       "default": "private",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "propertyKey"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata"
     ]
    },
    "get": {
     "id": "drive.properties.get",
     "path": "files/{fileId}/properties/{propertyKey}",
     "httpMethod": "GET",
     "description": "Gets a property by its key.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "propertyKey": {
       "type": "string",
       "description": "The key of the property.",
       "required": true,
       "location": "path"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "visibility": {
       "type": "string",
       "description": "The visibility of the property.",
       "default": "private",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "propertyKey"
     ],
     "response": {
      "$ref": "Property"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.properties.insert",
     "path": "files/{fileId}/properties",
     "httpMethod": "POST",
     "description": "Adds a property to a file.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "request": {
      "$ref": "Property"
     },
     "response": {
      "$ref": "Property"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata"
     ]
    },
    "list": {
     "id": "drive.properties.list",
     "path": "files/{fileId}/properties",
     "httpMethod": "GET",
     "description": "Lists a file's properties.",
     "parameters": {
      "allProperties": {
       "type": "boolean",
       "description": "Whether to retrieve all properties, not just those visible to the app.",
       "default": "false",
       "location": "query"
      },
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "PropertyList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "patch": {
     "id": "drive.properties.patch",
     "path": "files/{fileId}/properties/{propertyKey}",
     "httpMethod": "PATCH",
     "description": "Updates a property. This method supports patch semantics.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "propertyKey": {
       "type": "string",
       "description": "The key of the property.",
       "required": true,
       "location": "path"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "visibility": {
       "type": "string",
       "description": "The visibility of the property.",
       "default": "private",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "propertyKey"
     ],
     "request": {
      "$ref": "Property"
     },
     "response": {
      "$ref": "Property"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata"
     ]
    },
    "update": {
     "id": "drive.properties.update",
     "path": "files/{fileId}/properties/{propertyKey}",
     "httpMethod": "PUT",
     "description": "Updates a property.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "propertyKey": {
       "type": "string",
       "description": "The key of the property.",
       "required": true,
       "location": "path"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "visibility": {
       "type": "string",
       "description": "The visibility of the property.",
       "default": "private",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "propertyKey"
     ],
     "request": {
      "$ref": "Property"
     },
     "response": {
      "$ref": "Property"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata"
     ]
    }
   }
  },
  "realtime": {
   "methods": {
    "get": {
     "id": "drive.realtime.get",
     "path": "files/{fileId}/realtime",
     "httpMethod": "GET",
     "description": "Exports the contents of the Realtime API data model associated with this file as JSON.",
     "parameters": {
      "fileId": {
       "type": "string",
       "description": "The ID of the file that the Realtime API data model is associated with.",
       "required": true,
       "location": "path"
      },
      "revision": {
       "type": "integer",
       "description": "The revision of the Realtime API data model to export. Revisions start at 1 (the initial empty data model) and are incremented with each change. If this parameter is excluded, the most recent data model will be returned.",
       "format": "int32",
       "minimum": "1",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.readonly"
     ],
     "supportsMediaDownload": true
    },
    "update": {
     "id": "drive.realtime.update",
     "path": "files/{fileId}/realtime",
     "httpMethod": "PUT",
     "description": "Overwrites the Realtime API data model associated with this file with the provided JSON data model.",
     "parameters": {
      "baseRevision": {
       "type": "string",
       "description": "The revision of the model to diff the uploaded model against. If set, the uploaded model is diffed against the provided revision and those differences are merged with any changes made to the model after the provided revision. If not set, the uploaded model replaces the current model on the server.",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file that the Realtime API data model is associated with.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ],
     "supportsMediaUpload": true,
     "mediaUpload": {
      "accept": [
       "*/*"
      ],
      "maxSize": "10MB",
      "protocols": {
       "simple": {
        "multipart": true,
        "path": "/upload/drive/v2internal/files/{fileId}/realtime"
       },
       "resumable": {
        "multipart": true,
        "path": "/resumable/upload/drive/v2internal/files/{fileId}/realtime"
       }
      }
     }
    }
   }
  },
  "replies": {
   "methods": {
    "delete": {
     "id": "drive.replies.delete",
     "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
     "httpMethod": "DELETE",
     "description": "Deletes a reply.",
     "parameters": {
      "commentId": {
       "type": "string",
       "description": "The ID of the comment.",
       "required": true,
       "location": "path"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "replyId": {
       "type": "string",
       "description": "The ID of the reply.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "commentId",
      "replyId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "get": {
     "id": "drive.replies.get",
     "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
     "httpMethod": "GET",
     "description": "Gets a reply.",
     "parameters": {
      "commentId": {
       "type": "string",
       "description": "The ID of the comment.",
       "required": true,
       "location": "path"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "includeDeleted": {
       "type": "boolean",
       "description": "If set, this will succeed when retrieving a deleted reply.",
       "default": "false",
       "location": "query"
      },
      "replyId": {
       "type": "string",
       "description": "The ID of the reply.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "commentId",
      "replyId"
     ],
     "response": {
      "$ref": "CommentReply"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.replies.insert",
     "path": "files/{fileId}/comments/{commentId}/replies",
     "httpMethod": "POST",
     "description": "Creates a new reply to the given comment.",
     "parameters": {
      "commentId": {
       "type": "string",
       "description": "The ID of the comment.",
       "required": true,
       "location": "path"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "commentId"
     ],
     "request": {
      "$ref": "CommentReply"
     },
     "response": {
      "$ref": "CommentReply"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "list": {
     "id": "drive.replies.list",
     "path": "files/{fileId}/comments/{commentId}/replies",
     "httpMethod": "GET",
     "description": "Lists all of the replies to a comment.",
     "parameters": {
      "commentId": {
       "type": "string",
       "description": "The ID of the comment.",
       "required": true,
       "location": "path"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "includeDeleted": {
       "type": "boolean",
       "description": "If set, all replies, including deleted replies (with content stripped) will be returned.",
       "default": "false",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "The maximum number of replies to include in the response, used for paging.",
       "default": "20",
       "format": "int32",
       "minimum": "0",
       "maximum": "100",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "commentId"
     ],
     "response": {
      "$ref": "CommentReplyList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "patch": {
     "id": "drive.replies.patch",
     "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
     "httpMethod": "PATCH",
     "description": "Updates an existing reply. This method supports patch semantics.",
     "parameters": {
      "commentId": {
       "type": "string",
       "description": "The ID of the comment.",
       "required": true,
       "location": "path"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "replyId": {
       "type": "string",
       "description": "The ID of the reply.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "commentId",
      "replyId"
     ],
     "request": {
      "$ref": "CommentReply"
     },
     "response": {
      "$ref": "CommentReply"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "update": {
     "id": "drive.replies.update",
     "path": "files/{fileId}/comments/{commentId}/replies/{replyId}",
     "httpMethod": "PUT",
     "description": "Updates an existing reply.",
     "parameters": {
      "commentId": {
       "type": "string",
       "description": "The ID of the comment.",
       "required": true,
       "location": "path"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "replyId": {
       "type": "string",
       "description": "The ID of the reply.",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "fileId",
      "commentId",
      "replyId"
     ],
     "request": {
      "$ref": "CommentReply"
     },
     "response": {
      "$ref": "CommentReply"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.file"
     ]
    }
   }
  },
  "revisions": {
   "methods": {
    "delete": {
     "id": "drive.revisions.delete",
     "path": "files/{fileId}/revisions/{revisionId}",
     "httpMethod": "DELETE",
     "description": "Removes a revision.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "revisionId": {
       "type": "string",
       "description": "The ID of the revision.",
       "required": true,
       "location": "path"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "revisionId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "get": {
     "id": "drive.revisions.get",
     "path": "files/{fileId}/revisions/{revisionId}",
     "httpMethod": "GET",
     "description": "Gets a specific revision.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "revisionId": {
       "type": "string",
       "description": "The ID of the revision.",
       "required": true,
       "location": "path"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "revisionId"
     ],
     "response": {
      "$ref": "Revision"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "list": {
     "id": "drive.revisions.list",
     "path": "files/{fileId}/revisions",
     "httpMethod": "GET",
     "description": "Lists a file's revisions.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID of the file.",
       "required": true,
       "location": "path"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of revisions to return.",
       "default": "200",
       "format": "int32",
       "minimum": "1",
       "maximum": "1000",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Page token for revisions. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId"
     ],
     "response": {
      "$ref": "RevisionList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "patch": {
     "id": "drive.revisions.patch",
     "path": "files/{fileId}/revisions/{revisionId}",
     "httpMethod": "PATCH",
     "description": "Updates a revision. This method supports patch semantics.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID for the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "revisionId": {
       "type": "string",
       "description": "The ID for the revision.",
       "required": true,
       "location": "path"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "revisionId"
     ],
     "request": {
      "$ref": "Revision"
     },
     "response": {
      "$ref": "Revision"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file"
     ]
    },
    "update": {
     "id": "drive.revisions.update",
     "path": "files/{fileId}/revisions/{revisionId}",
     "httpMethod": "PUT",
     "description": "Updates a revision.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "fileId": {
       "type": "string",
       "description": "The ID for the file.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "revisionId": {
       "type": "string",
       "description": "The ID for the revision.",
       "required": true,
       "location": "path"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "fileId",
      "revisionId"
     ],
     "request": {
      "$ref": "Revision"
     },
     "response": {
      "$ref": "Revision"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file"
     ]
    }
   }
  },
  "settings": {
   "methods": {
    "delete": {
     "id": "drive.settings.delete",
     "path": "settings/{keyname}",
     "httpMethod": "DELETE",
     "description": "Deletes a setting.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "keyname": {
       "type": "string",
       "description": "The key of the setting.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "namespace": {
       "type": "string",
       "description": "The namespace of the setting.",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "keyname"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata"
     ]
    },
    "get": {
     "id": "drive.settings.get",
     "path": "settings/{keyname}",
     "httpMethod": "GET",
     "description": "Gets a setting by its key.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "keyname": {
       "type": "string",
       "description": "The key of the setting.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "namespace": {
       "type": "string",
       "description": "The namespace of the setting.",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "keyname"
     ],
     "response": {
      "$ref": "Setting"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.settings.insert",
     "path": "settings",
     "httpMethod": "POST",
     "description": "Adds a setting for a user.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "namespace": {
       "type": "string",
       "description": "The namespace of the created setting.",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "request": {
      "$ref": "Setting"
     },
     "response": {
      "$ref": "Setting"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata"
     ]
    },
    "list": {
     "id": "drive.settings.list",
     "path": "settings",
     "httpMethod": "GET",
     "description": "Lists a user's settings.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "namespace": {
       "type": "string",
       "description": "The namespace of the settings.",
       "repeated": true,
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "response": {
      "$ref": "SettingList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "patch": {
     "id": "drive.settings.patch",
     "path": "settings/{keyname}",
     "httpMethod": "PATCH",
     "description": "Updates a setting. This method supports patch semantics.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "keyname": {
       "type": "string",
       "description": "The key of the setting.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "namespace": {
       "type": "string",
       "description": "The namespace of the setting.",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "keyname"
     ],
     "request": {
      "$ref": "Setting"
     },
     "response": {
      "$ref": "Setting"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata"
     ]
    },
    "update": {
     "id": "drive.settings.update",
     "path": "settings/{keyname}",
     "httpMethod": "PUT",
     "description": "Updates a setting.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "keyname": {
       "type": "string",
       "description": "The key of the setting.",
       "required": true,
       "location": "path"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "namespace": {
       "type": "string",
       "description": "The namespace of the setting.",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "keyname"
     ],
     "request": {
      "$ref": "Setting"
     },
     "response": {
      "$ref": "Setting"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.appdata",
      "https://www.googleapis.com/auth/drive.file",
      "https://www.googleapis.com/auth/drive.metadata"
     ]
    }
   }
  },
  "teamdrives": {
   "methods": {
    "delete": {
     "id": "drive.teamdrives.delete",
     "path": "teamdrives/{teamDriveId}",
     "httpMethod": "DELETE",
     "description": "Permanently deletes a Team Drive for which the user is an organizer. The Team Drive cannot contain any untrashed items.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "teamDriveId": {
       "type": "string",
       "description": "The ID of the Team Drive",
       "required": true,
       "location": "path"
      }
     },
     "parameterOrder": [
      "teamDriveId"
     ],
     "scopes": [
      "https://www.googleapis.com/auth/drive"
     ]
    },
    "get": {
     "id": "drive.teamdrives.get",
     "path": "teamdrives/{teamDriveId}",
     "httpMethod": "GET",
     "description": "Gets a Team Drive's metadata by ID.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "teamDriveId": {
       "type": "string",
       "description": "The ID of the Team Drive",
       "required": true,
       "location": "path"
      },
      "useDomainAdminAccess": {
       "type": "boolean",
       "description": "Whether the request should be treated as if it was issued by a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "teamDriveId"
     ],
     "response": {
      "$ref": "TeamDrive"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "insert": {
     "id": "drive.teamdrives.insert",
     "path": "teamdrives/{requestId}",
     "httpMethod": "POST",
     "description": "Creates a new Team Drive.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "requestId": {
       "type": "string",
       "description": "An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a Team Drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same Team Drive. If the Team Drive already exists a 409 error will be returned.",
       "required": true,
       "location": "path"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "requestId"
     ],
     "request": {
      "$ref": "TeamDrive"
     },
     "response": {
      "$ref": "TeamDrive"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive"
     ]
    },
    "list": {
     "id": "drive.teamdrives.list",
     "path": "teamdrives",
     "httpMethod": "GET",
     "description": "Lists the user's Team Drives.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "maxResults": {
       "type": "integer",
       "description": "Maximum number of Team Drives to return.",
       "default": "10",
       "format": "int32",
       "minimum": "1",
       "maximum": "100",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "pageToken": {
       "type": "string",
       "description": "Page token for Team Drives.",
       "location": "query"
      },
      "q": {
       "type": "string",
       "description": "Query string for searching Team Drives.",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "useDomainAdminAccess": {
       "type": "boolean",
       "description": "Whether the request should be treated as if it was issued by a domain administrator; if set to true, then all Team Drives of the domain in which the requester is an administrator are returned.",
       "default": "false",
       "location": "query"
      }
     },
     "response": {
      "$ref": "TeamDriveList"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    },
    "update": {
     "id": "drive.teamdrives.update",
     "path": "teamdrives/{teamDriveId}",
     "httpMethod": "PUT",
     "description": "Updates a Team Drive's metadata",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      },
      "teamDriveId": {
       "type": "string",
       "description": "The ID of the Team Drive",
       "required": true,
       "location": "path"
      },
      "useDomainAdminAccess": {
       "type": "boolean",
       "description": "Whether the request should be treated as if it was issued by a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs.",
       "default": "false",
       "location": "query"
      }
     },
     "parameterOrder": [
      "teamDriveId"
     ],
     "request": {
      "$ref": "TeamDrive"
     },
     "response": {
      "$ref": "TeamDrive"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive"
     ]
    }
   }
  },
  "users": {
   "methods": {
    "get": {
     "id": "drive.users.get",
     "path": "users/{permissionId}",
     "httpMethod": "GET",
     "description": "DEPRECATED: Gets a user by ID.",
     "parameters": {
      "errorRecovery": {
       "type": "boolean",
       "description": "Whether the request is done as a corrective measure after an earlier failed request.",
       "default": "false",
       "location": "query"
      },
      "mutationPrecondition": {
       "type": "boolean",
       "description": "Whether the request is done prior to a mutation to verify that data is in an expected/desired/supported state.",
       "default": "false",
       "location": "query"
      },
      "openDrive": {
       "type": "boolean",
       "description": "Whether the request is a part of initializing the app/website data when the user begins a session.",
       "default": "false",
       "location": "query"
      },
      "permissionId": {
       "type": "string",
       "description": "The ID for the user.",
       "required": true,
       "location": "path"
      },
      "reason": {
       "type": "string",
       "description": "The user action or internal event that triggered the request.",
       "location": "query"
      },
      "syncType": {
       "type": "integer",
       "description": "Whether the request is blocking a user action or not.",
       "default": "0",
       "format": "int32",
       "location": "query"
      }
     },
     "parameterOrder": [
      "permissionId"
     ],
     "response": {
      "$ref": "User"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive",
      "https://www.googleapis.com/auth/drive.metadata",
      "https://www.googleapis.com/auth/drive.metadata.readonly",
      "https://www.googleapis.com/auth/drive.photos.readonly",
      "https://www.googleapis.com/auth/drive.readonly"
     ]
    }
   }
  },
  "viewerimpressions": {
   "methods": {
    "insert": {
     "id": "drive.viewerimpressions.insert",
     "path": "viewerimpressions",
     "httpMethod": "POST",
     "description": "Log user impressions.",
     "request": {
      "$ref": "Impression"
     },
     "scopes": [
      "https://www.googleapis.com/auth/drive"
     ]
    }
   }
  }
 }
}
